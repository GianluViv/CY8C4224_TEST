ARM GAS  C:\Users\GIANLU~1\AppData\Local\Temp\ccsLdGBK.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"UART_UART.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.UART_UartInit,"ax",%progbits
  20              		.align	2
  21              		.global	UART_UartInit
  22              		.code	16
  23              		.thumb_func
  24              		.type	UART_UartInit, %function
  25              	UART_UartInit:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC4\\UART_UART.c"
   1:Generated_Source\PSoC4/UART_UART.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/UART_UART.c **** * \file UART_UART.c
   3:Generated_Source\PSoC4/UART_UART.c **** * \version 4.0
   4:Generated_Source\PSoC4/UART_UART.c **** *
   5:Generated_Source\PSoC4/UART_UART.c **** * \brief
   6:Generated_Source\PSoC4/UART_UART.c **** *  This file provides the source code to the API for the SCB Component in
   7:Generated_Source\PSoC4/UART_UART.c **** *  UART mode.
   8:Generated_Source\PSoC4/UART_UART.c **** *
   9:Generated_Source\PSoC4/UART_UART.c **** * Note:
  10:Generated_Source\PSoC4/UART_UART.c **** *
  11:Generated_Source\PSoC4/UART_UART.c **** *******************************************************************************
  12:Generated_Source\PSoC4/UART_UART.c **** * \copyright
  13:Generated_Source\PSoC4/UART_UART.c **** * Copyright 2013-2017, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/UART_UART.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/UART_UART.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/UART_UART.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/UART_UART.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/UART_UART.c **** 
  19:Generated_Source\PSoC4/UART_UART.c **** #include "UART_PVT.h"
  20:Generated_Source\PSoC4/UART_UART.c **** #include "UART_SPI_UART_PVT.h"
  21:Generated_Source\PSoC4/UART_UART.c **** #include "cyapicallbacks.h"
  22:Generated_Source\PSoC4/UART_UART.c **** 
  23:Generated_Source\PSoC4/UART_UART.c **** #if (UART_UART_WAKE_ENABLE_CONST && UART_UART_RX_WAKEUP_IRQ)
  24:Generated_Source\PSoC4/UART_UART.c ****     /**
  25:Generated_Source\PSoC4/UART_UART.c ****     * \addtogroup group_globals
  26:Generated_Source\PSoC4/UART_UART.c ****     * \{
  27:Generated_Source\PSoC4/UART_UART.c ****     */
  28:Generated_Source\PSoC4/UART_UART.c ****     /** This global variable determines whether to enable Skip Start
  29:Generated_Source\PSoC4/UART_UART.c ****     * functionality when UART_Sleep() function is called:
  30:Generated_Source\PSoC4/UART_UART.c ****     * 0 – disable, other values – enable. Default value is 1.
ARM GAS  C:\Users\GIANLU~1\AppData\Local\Temp\ccsLdGBK.s 			page 2


  31:Generated_Source\PSoC4/UART_UART.c ****     * It is only available when Enable wakeup from Deep Sleep Mode is enabled.
  32:Generated_Source\PSoC4/UART_UART.c ****     */
  33:Generated_Source\PSoC4/UART_UART.c ****     uint8 UART_skipStart = 1u;
  34:Generated_Source\PSoC4/UART_UART.c ****     /** \} globals */
  35:Generated_Source\PSoC4/UART_UART.c **** #endif /* (UART_UART_WAKE_ENABLE_CONST && UART_UART_RX_WAKEUP_IRQ) */
  36:Generated_Source\PSoC4/UART_UART.c **** 
  37:Generated_Source\PSoC4/UART_UART.c **** #if(UART_SCB_MODE_UNCONFIG_CONST_CFG)
  38:Generated_Source\PSoC4/UART_UART.c **** 
  39:Generated_Source\PSoC4/UART_UART.c ****     /***************************************
  40:Generated_Source\PSoC4/UART_UART.c ****     *  Configuration Structure Initialization
  41:Generated_Source\PSoC4/UART_UART.c ****     ***************************************/
  42:Generated_Source\PSoC4/UART_UART.c **** 
  43:Generated_Source\PSoC4/UART_UART.c ****     const UART_UART_INIT_STRUCT UART_configUart =
  44:Generated_Source\PSoC4/UART_UART.c ****     {
  45:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_SUB_MODE,
  46:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_DIRECTION,
  47:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_DATA_BITS_NUM,
  48:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_PARITY_TYPE,
  49:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_STOP_BITS_NUM,
  50:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_OVS_FACTOR,
  51:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_IRDA_LOW_POWER,
  52:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_MEDIAN_FILTER_ENABLE,
  53:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_RETRY_ON_NACK,
  54:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_IRDA_POLARITY,
  55:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_DROP_ON_PARITY_ERR,
  56:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_DROP_ON_FRAME_ERR,
  57:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_WAKE_ENABLE,
  58:Generated_Source\PSoC4/UART_UART.c ****         0u,
  59:Generated_Source\PSoC4/UART_UART.c ****         NULL,
  60:Generated_Source\PSoC4/UART_UART.c ****         0u,
  61:Generated_Source\PSoC4/UART_UART.c ****         NULL,
  62:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_MP_MODE_ENABLE,
  63:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_MP_ACCEPT_ADDRESS,
  64:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_MP_RX_ADDRESS,
  65:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_MP_RX_ADDRESS_MASK,
  66:Generated_Source\PSoC4/UART_UART.c ****         (uint32) UART_SCB_IRQ_INTERNAL,
  67:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_INTR_RX_MASK,
  68:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_RX_TRIGGER_LEVEL,
  69:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_INTR_TX_MASK,
  70:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_TX_TRIGGER_LEVEL,
  71:Generated_Source\PSoC4/UART_UART.c ****         (uint8) UART_UART_BYTE_MODE_ENABLE,
  72:Generated_Source\PSoC4/UART_UART.c ****         (uint8) UART_UART_CTS_ENABLE,
  73:Generated_Source\PSoC4/UART_UART.c ****         (uint8) UART_UART_CTS_POLARITY,
  74:Generated_Source\PSoC4/UART_UART.c ****         (uint8) UART_UART_RTS_POLARITY,
  75:Generated_Source\PSoC4/UART_UART.c ****         (uint8) UART_UART_RTS_FIFO_LEVEL,
  76:Generated_Source\PSoC4/UART_UART.c ****         (uint8) UART_UART_RX_BREAK_WIDTH
  77:Generated_Source\PSoC4/UART_UART.c ****     };
  78:Generated_Source\PSoC4/UART_UART.c **** 
  79:Generated_Source\PSoC4/UART_UART.c **** 
  80:Generated_Source\PSoC4/UART_UART.c ****     /*******************************************************************************
  81:Generated_Source\PSoC4/UART_UART.c ****     * Function Name: UART_UartInit
  82:Generated_Source\PSoC4/UART_UART.c ****     ****************************************************************************//**
  83:Generated_Source\PSoC4/UART_UART.c ****     *
  84:Generated_Source\PSoC4/UART_UART.c ****     *  Configures the UART for UART operation.
  85:Generated_Source\PSoC4/UART_UART.c ****     *
  86:Generated_Source\PSoC4/UART_UART.c ****     *  This function is intended specifically to be used when the UART
  87:Generated_Source\PSoC4/UART_UART.c ****     *  configuration is set to “Unconfigured UART” in the customizer.
ARM GAS  C:\Users\GIANLU~1\AppData\Local\Temp\ccsLdGBK.s 			page 3


  88:Generated_Source\PSoC4/UART_UART.c ****     *  After initializing the UART in UART mode using this function,
  89:Generated_Source\PSoC4/UART_UART.c ****     *  the component can be enabled using the UART_Start() or
  90:Generated_Source\PSoC4/UART_UART.c ****     * UART_Enable() function.
  91:Generated_Source\PSoC4/UART_UART.c ****     *  This function uses a pointer to a structure that provides the configuration
  92:Generated_Source\PSoC4/UART_UART.c ****     *  settings. This structure contains the same information that would otherwise
  93:Generated_Source\PSoC4/UART_UART.c ****     *  be provided by the customizer settings.
  94:Generated_Source\PSoC4/UART_UART.c ****     *
  95:Generated_Source\PSoC4/UART_UART.c ****     *  \param config: pointer to a structure that contains the following list of
  96:Generated_Source\PSoC4/UART_UART.c ****     *   fields. These fields match the selections available in the customizer.
  97:Generated_Source\PSoC4/UART_UART.c ****     *   Refer to the customizer for further description of the settings.
  98:Generated_Source\PSoC4/UART_UART.c ****     *
  99:Generated_Source\PSoC4/UART_UART.c ****     *******************************************************************************/
 100:Generated_Source\PSoC4/UART_UART.c ****     void UART_UartInit(const UART_UART_INIT_STRUCT *config)
 101:Generated_Source\PSoC4/UART_UART.c ****     {
 102:Generated_Source\PSoC4/UART_UART.c ****         uint32 pinsConfig;
 103:Generated_Source\PSoC4/UART_UART.c **** 
 104:Generated_Source\PSoC4/UART_UART.c ****         if (NULL == config)
 105:Generated_Source\PSoC4/UART_UART.c ****         {
 106:Generated_Source\PSoC4/UART_UART.c ****             CYASSERT(0u != 0u); /* Halt execution due to bad function parameter */
 107:Generated_Source\PSoC4/UART_UART.c ****         }
 108:Generated_Source\PSoC4/UART_UART.c ****         else
 109:Generated_Source\PSoC4/UART_UART.c ****         {
 110:Generated_Source\PSoC4/UART_UART.c ****             /* Get direction to configure UART pins: TX, RX or TX+RX */
 111:Generated_Source\PSoC4/UART_UART.c ****             pinsConfig  = config->direction;
 112:Generated_Source\PSoC4/UART_UART.c **** 
 113:Generated_Source\PSoC4/UART_UART.c ****         #if !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1)
 114:Generated_Source\PSoC4/UART_UART.c ****             /* Add RTS and CTS pins to configure */
 115:Generated_Source\PSoC4/UART_UART.c ****             pinsConfig |= (0u != config->rtsRxFifoLevel) ? (UART_UART_RTS_PIN_ENABLE) : (0u);
 116:Generated_Source\PSoC4/UART_UART.c ****             pinsConfig |= (0u != config->enableCts)      ? (UART_UART_CTS_PIN_ENABLE) : (0u);
 117:Generated_Source\PSoC4/UART_UART.c ****         #endif /* !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1) */
 118:Generated_Source\PSoC4/UART_UART.c **** 
 119:Generated_Source\PSoC4/UART_UART.c ****             /* Configure pins */
 120:Generated_Source\PSoC4/UART_UART.c ****             UART_SetPins(UART_SCB_MODE_UART, config->mode, pinsConfig);
 121:Generated_Source\PSoC4/UART_UART.c **** 
 122:Generated_Source\PSoC4/UART_UART.c ****             /* Store internal configuration */
 123:Generated_Source\PSoC4/UART_UART.c ****             UART_scbMode       = (uint8) UART_SCB_MODE_UART;
 124:Generated_Source\PSoC4/UART_UART.c ****             UART_scbEnableWake = (uint8) config->enableWake;
 125:Generated_Source\PSoC4/UART_UART.c ****             UART_scbEnableIntr = (uint8) config->enableInterrupt;
 126:Generated_Source\PSoC4/UART_UART.c **** 
 127:Generated_Source\PSoC4/UART_UART.c ****             /* Set RX direction internal variables */
 128:Generated_Source\PSoC4/UART_UART.c ****             UART_rxBuffer      =         config->rxBuffer;
 129:Generated_Source\PSoC4/UART_UART.c ****             UART_rxDataBits    = (uint8) config->dataBits;
 130:Generated_Source\PSoC4/UART_UART.c ****             UART_rxBufferSize  =         config->rxBufferSize;
 131:Generated_Source\PSoC4/UART_UART.c **** 
 132:Generated_Source\PSoC4/UART_UART.c ****             /* Set TX direction internal variables */
 133:Generated_Source\PSoC4/UART_UART.c ****             UART_txBuffer      =         config->txBuffer;
 134:Generated_Source\PSoC4/UART_UART.c ****             UART_txDataBits    = (uint8) config->dataBits;
 135:Generated_Source\PSoC4/UART_UART.c ****             UART_txBufferSize  =         config->txBufferSize;
 136:Generated_Source\PSoC4/UART_UART.c **** 
 137:Generated_Source\PSoC4/UART_UART.c ****             /* Configure UART interface */
 138:Generated_Source\PSoC4/UART_UART.c ****             if(UART_UART_MODE_IRDA == config->mode)
 139:Generated_Source\PSoC4/UART_UART.c ****             {
 140:Generated_Source\PSoC4/UART_UART.c ****                 /* OVS settings: IrDA */
 141:Generated_Source\PSoC4/UART_UART.c ****                 UART_CTRL_REG  = ((0u != config->enableIrdaLowPower) ?
 142:Generated_Source\PSoC4/UART_UART.c ****                                                 (UART_UART_GET_CTRL_OVS_IRDA_LP(config->oversample)
 143:Generated_Source\PSoC4/UART_UART.c ****                                                 (UART_CTRL_OVS_IRDA_OVS16));
 144:Generated_Source\PSoC4/UART_UART.c ****             }
ARM GAS  C:\Users\GIANLU~1\AppData\Local\Temp\ccsLdGBK.s 			page 4


 145:Generated_Source\PSoC4/UART_UART.c ****             else
 146:Generated_Source\PSoC4/UART_UART.c ****             {
 147:Generated_Source\PSoC4/UART_UART.c ****                 /* OVS settings: UART and SmartCard */
 148:Generated_Source\PSoC4/UART_UART.c ****                 UART_CTRL_REG  = UART_GET_CTRL_OVS(config->oversample);
 149:Generated_Source\PSoC4/UART_UART.c ****             }
 150:Generated_Source\PSoC4/UART_UART.c **** 
 151:Generated_Source\PSoC4/UART_UART.c ****             UART_CTRL_REG     |= UART_GET_CTRL_BYTE_MODE  (config->enableByteMode)      |
 152:Generated_Source\PSoC4/UART_UART.c ****                                              UART_GET_CTRL_ADDR_ACCEPT(config->multiprocAcceptAddr)
 153:Generated_Source\PSoC4/UART_UART.c ****                                              UART_CTRL_UART;
 154:Generated_Source\PSoC4/UART_UART.c **** 
 155:Generated_Source\PSoC4/UART_UART.c ****             /* Configure sub-mode: UART, SmartCard or IrDA */
 156:Generated_Source\PSoC4/UART_UART.c ****             UART_UART_CTRL_REG = UART_GET_UART_CTRL_MODE(config->mode);
 157:Generated_Source\PSoC4/UART_UART.c **** 
 158:Generated_Source\PSoC4/UART_UART.c ****             /* Configure RX direction */
 159:Generated_Source\PSoC4/UART_UART.c ****             UART_UART_RX_CTRL_REG = UART_GET_UART_RX_CTRL_MODE(config->stopBits)              |
 160:Generated_Source\PSoC4/UART_UART.c ****                                         UART_GET_UART_RX_CTRL_POLARITY(config->enableInvertedRx)   
 161:Generated_Source\PSoC4/UART_UART.c ****                                         UART_GET_UART_RX_CTRL_MP_MODE(config->enableMultiproc)     
 162:Generated_Source\PSoC4/UART_UART.c ****                                         UART_GET_UART_RX_CTRL_DROP_ON_PARITY_ERR(config->dropOnPari
 163:Generated_Source\PSoC4/UART_UART.c ****                                         UART_GET_UART_RX_CTRL_DROP_ON_FRAME_ERR(config->dropOnFrame
 164:Generated_Source\PSoC4/UART_UART.c ****                                         UART_GET_UART_RX_CTRL_BREAK_WIDTH(config->breakWidth);
 165:Generated_Source\PSoC4/UART_UART.c **** 
 166:Generated_Source\PSoC4/UART_UART.c ****             if(UART_UART_PARITY_NONE != config->parity)
 167:Generated_Source\PSoC4/UART_UART.c ****             {
 168:Generated_Source\PSoC4/UART_UART.c ****                UART_UART_RX_CTRL_REG |= UART_GET_UART_RX_CTRL_PARITY(config->parity) |
 169:Generated_Source\PSoC4/UART_UART.c ****                                                     UART_UART_RX_CTRL_PARITY_ENABLED;
 170:Generated_Source\PSoC4/UART_UART.c ****             }
 171:Generated_Source\PSoC4/UART_UART.c **** 
 172:Generated_Source\PSoC4/UART_UART.c ****             UART_RX_CTRL_REG      = UART_GET_RX_CTRL_DATA_WIDTH(config->dataBits)       |
 173:Generated_Source\PSoC4/UART_UART.c ****                                                 UART_GET_RX_CTRL_MEDIAN(config->enableMedianFilter)
 174:Generated_Source\PSoC4/UART_UART.c ****                                                 UART_GET_UART_RX_CTRL_ENABLED(config->direction);
 175:Generated_Source\PSoC4/UART_UART.c **** 
 176:Generated_Source\PSoC4/UART_UART.c ****             UART_RX_FIFO_CTRL_REG = UART_GET_RX_FIFO_CTRL_TRIGGER_LEVEL(config->rxTriggerLevel);
 177:Generated_Source\PSoC4/UART_UART.c **** 
 178:Generated_Source\PSoC4/UART_UART.c ****             /* Configure MP address */
 179:Generated_Source\PSoC4/UART_UART.c ****             UART_RX_MATCH_REG     = UART_GET_RX_MATCH_ADDR(config->multiprocAddr) |
 180:Generated_Source\PSoC4/UART_UART.c ****                                                 UART_GET_RX_MATCH_MASK(config->multiprocAddrMask);
 181:Generated_Source\PSoC4/UART_UART.c **** 
 182:Generated_Source\PSoC4/UART_UART.c ****             /* Configure RX direction */
 183:Generated_Source\PSoC4/UART_UART.c ****             UART_UART_TX_CTRL_REG = UART_GET_UART_TX_CTRL_MODE(config->stopBits) |
 184:Generated_Source\PSoC4/UART_UART.c ****                                                 UART_GET_UART_TX_CTRL_RETRY_NACK(config->enableRetr
 185:Generated_Source\PSoC4/UART_UART.c **** 
 186:Generated_Source\PSoC4/UART_UART.c ****             if(UART_UART_PARITY_NONE != config->parity)
 187:Generated_Source\PSoC4/UART_UART.c ****             {
 188:Generated_Source\PSoC4/UART_UART.c ****                UART_UART_TX_CTRL_REG |= UART_GET_UART_TX_CTRL_PARITY(config->parity) |
 189:Generated_Source\PSoC4/UART_UART.c ****                                                     UART_UART_TX_CTRL_PARITY_ENABLED;
 190:Generated_Source\PSoC4/UART_UART.c ****             }
 191:Generated_Source\PSoC4/UART_UART.c **** 
 192:Generated_Source\PSoC4/UART_UART.c ****             UART_TX_CTRL_REG      = UART_GET_TX_CTRL_DATA_WIDTH(config->dataBits)    |
 193:Generated_Source\PSoC4/UART_UART.c ****                                                 UART_GET_UART_TX_CTRL_ENABLED(config->direction);
 194:Generated_Source\PSoC4/UART_UART.c **** 
 195:Generated_Source\PSoC4/UART_UART.c ****             UART_TX_FIFO_CTRL_REG = UART_GET_TX_FIFO_CTRL_TRIGGER_LEVEL(config->txTriggerLevel);
 196:Generated_Source\PSoC4/UART_UART.c **** 
 197:Generated_Source\PSoC4/UART_UART.c ****         #if !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1)
 198:Generated_Source\PSoC4/UART_UART.c ****             UART_UART_FLOW_CTRL_REG = UART_GET_UART_FLOW_CTRL_CTS_ENABLE(config->enableCts) | \
 199:Generated_Source\PSoC4/UART_UART.c ****                                             UART_GET_UART_FLOW_CTRL_CTS_POLARITY (config->ctsPolari
 200:Generated_Source\PSoC4/UART_UART.c ****                                             UART_GET_UART_FLOW_CTRL_RTS_POLARITY (config->rtsPolari
 201:Generated_Source\PSoC4/UART_UART.c ****                                             UART_GET_UART_FLOW_CTRL_TRIGGER_LEVEL(config->rtsRxFifo
ARM GAS  C:\Users\GIANLU~1\AppData\Local\Temp\ccsLdGBK.s 			page 5


 202:Generated_Source\PSoC4/UART_UART.c ****         #endif /* !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1) */
 203:Generated_Source\PSoC4/UART_UART.c **** 
 204:Generated_Source\PSoC4/UART_UART.c ****             /* Configure interrupt with UART handler but do not enable it */
 205:Generated_Source\PSoC4/UART_UART.c ****             CyIntDisable    (UART_ISR_NUMBER);
 206:Generated_Source\PSoC4/UART_UART.c ****             CyIntSetPriority(UART_ISR_NUMBER, UART_ISR_PRIORITY);
 207:Generated_Source\PSoC4/UART_UART.c ****             (void) CyIntSetVector(UART_ISR_NUMBER, &UART_SPI_UART_ISR);
 208:Generated_Source\PSoC4/UART_UART.c **** 
 209:Generated_Source\PSoC4/UART_UART.c ****             /* Configure WAKE interrupt */
 210:Generated_Source\PSoC4/UART_UART.c ****         #if(UART_UART_RX_WAKEUP_IRQ)
 211:Generated_Source\PSoC4/UART_UART.c ****             CyIntDisable    (UART_RX_WAKE_ISR_NUMBER);
 212:Generated_Source\PSoC4/UART_UART.c ****             CyIntSetPriority(UART_RX_WAKE_ISR_NUMBER, UART_RX_WAKE_ISR_PRIORITY);
 213:Generated_Source\PSoC4/UART_UART.c ****             (void) CyIntSetVector(UART_RX_WAKE_ISR_NUMBER, &UART_UART_WAKEUP_ISR);
 214:Generated_Source\PSoC4/UART_UART.c ****         #endif /* (UART_UART_RX_WAKEUP_IRQ) */
 215:Generated_Source\PSoC4/UART_UART.c **** 
 216:Generated_Source\PSoC4/UART_UART.c ****             /* Configure interrupt sources */
 217:Generated_Source\PSoC4/UART_UART.c ****             UART_INTR_I2C_EC_MASK_REG = UART_NO_INTR_SOURCES;
 218:Generated_Source\PSoC4/UART_UART.c ****             UART_INTR_SPI_EC_MASK_REG = UART_NO_INTR_SOURCES;
 219:Generated_Source\PSoC4/UART_UART.c ****             UART_INTR_SLAVE_MASK_REG  = UART_NO_INTR_SOURCES;
 220:Generated_Source\PSoC4/UART_UART.c ****             UART_INTR_MASTER_MASK_REG = UART_NO_INTR_SOURCES;
 221:Generated_Source\PSoC4/UART_UART.c ****             UART_INTR_RX_MASK_REG     = config->rxInterruptMask;
 222:Generated_Source\PSoC4/UART_UART.c ****             UART_INTR_TX_MASK_REG     = config->txInterruptMask;
 223:Generated_Source\PSoC4/UART_UART.c **** 
 224:Generated_Source\PSoC4/UART_UART.c ****             /* Configure TX interrupt sources to restore. */
 225:Generated_Source\PSoC4/UART_UART.c ****             UART_IntrTxMask = LO16(UART_INTR_TX_MASK_REG);
 226:Generated_Source\PSoC4/UART_UART.c **** 
 227:Generated_Source\PSoC4/UART_UART.c ****             /* Clear RX buffer indexes */
 228:Generated_Source\PSoC4/UART_UART.c ****             UART_rxBufferHead     = 0u;
 229:Generated_Source\PSoC4/UART_UART.c ****             UART_rxBufferTail     = 0u;
 230:Generated_Source\PSoC4/UART_UART.c ****             UART_rxBufferOverflow = 0u;
 231:Generated_Source\PSoC4/UART_UART.c **** 
 232:Generated_Source\PSoC4/UART_UART.c ****             /* Clear TX buffer indexes */
 233:Generated_Source\PSoC4/UART_UART.c ****             UART_txBufferHead = 0u;
 234:Generated_Source\PSoC4/UART_UART.c ****             UART_txBufferTail = 0u;
 235:Generated_Source\PSoC4/UART_UART.c ****         }
 236:Generated_Source\PSoC4/UART_UART.c ****     }
 237:Generated_Source\PSoC4/UART_UART.c **** 
 238:Generated_Source\PSoC4/UART_UART.c **** #else
 239:Generated_Source\PSoC4/UART_UART.c **** 
 240:Generated_Source\PSoC4/UART_UART.c ****     /*******************************************************************************
 241:Generated_Source\PSoC4/UART_UART.c ****     * Function Name: UART_UartInit
 242:Generated_Source\PSoC4/UART_UART.c ****     ****************************************************************************//**
 243:Generated_Source\PSoC4/UART_UART.c ****     *
 244:Generated_Source\PSoC4/UART_UART.c ****     *  Configures the SCB for the UART operation.
 245:Generated_Source\PSoC4/UART_UART.c ****     *
 246:Generated_Source\PSoC4/UART_UART.c ****     *******************************************************************************/
 247:Generated_Source\PSoC4/UART_UART.c ****     void UART_UartInit(void)
 248:Generated_Source\PSoC4/UART_UART.c ****     {
  28              		.loc 1 248 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 10B5     		push	{r4, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 4, -8
  35              		.cfi_offset 14, -4
 249:Generated_Source\PSoC4/UART_UART.c ****         /* Configure UART interface */
 250:Generated_Source\PSoC4/UART_UART.c ****         UART_CTRL_REG = UART_UART_DEFAULT_CTRL;
ARM GAS  C:\Users\GIANLU~1\AppData\Local\Temp\ccsLdGBK.s 			page 6


  36              		.loc 1 250 0
  37 0002 1A4A     		ldr	r2, .L2
  38 0004 1A4B     		ldr	r3, .L2+4
  39 0006 1A60     		str	r2, [r3]
 251:Generated_Source\PSoC4/UART_UART.c **** 
 252:Generated_Source\PSoC4/UART_UART.c ****         /* Configure sub-mode: UART, SmartCard or IrDA */
 253:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_CTRL_REG = UART_UART_DEFAULT_UART_CTRL;
  40              		.loc 1 253 0
  41 0008 0024     		movs	r4, #0
  42 000a 1A4B     		ldr	r3, .L2+8
  43 000c 1C60     		str	r4, [r3]
 254:Generated_Source\PSoC4/UART_UART.c **** 
 255:Generated_Source\PSoC4/UART_UART.c ****         /* Configure RX direction */
 256:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_RX_CTRL_REG = UART_UART_DEFAULT_UART_RX_CTRL;
  44              		.loc 1 256 0
  45 000e 1A4A     		ldr	r2, .L2+12
  46 0010 1A4B     		ldr	r3, .L2+16
  47 0012 1A60     		str	r2, [r3]
 257:Generated_Source\PSoC4/UART_UART.c ****         UART_RX_CTRL_REG      = UART_UART_DEFAULT_RX_CTRL;
  48              		.loc 1 257 0
  49 0014 1A4A     		ldr	r2, .L2+20
  50 0016 1B4B     		ldr	r3, .L2+24
  51 0018 1A60     		str	r2, [r3]
 258:Generated_Source\PSoC4/UART_UART.c ****         UART_RX_FIFO_CTRL_REG = UART_UART_DEFAULT_RX_FIFO_CTRL;
  52              		.loc 1 258 0
  53 001a 0722     		movs	r2, #7
  54 001c 1A4B     		ldr	r3, .L2+28
  55 001e 1A60     		str	r2, [r3]
 259:Generated_Source\PSoC4/UART_UART.c ****         UART_RX_MATCH_REG     = UART_UART_DEFAULT_RX_MATCH_REG;
  56              		.loc 1 259 0
  57 0020 1A4B     		ldr	r3, .L2+32
  58 0022 1C60     		str	r4, [r3]
 260:Generated_Source\PSoC4/UART_UART.c **** 
 261:Generated_Source\PSoC4/UART_UART.c ****         /* Configure TX direction */
 262:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_TX_CTRL_REG = UART_UART_DEFAULT_UART_TX_CTRL;
  59              		.loc 1 262 0
  60 0024 063A     		subs	r2, r2, #6
  61 0026 1A4B     		ldr	r3, .L2+36
  62 0028 1A60     		str	r2, [r3]
 263:Generated_Source\PSoC4/UART_UART.c ****         UART_TX_CTRL_REG      = UART_UART_DEFAULT_TX_CTRL;
  63              		.loc 1 263 0
  64 002a 1A4A     		ldr	r2, .L2+40
  65 002c 1A4B     		ldr	r3, .L2+44
  66 002e 1A60     		str	r2, [r3]
 264:Generated_Source\PSoC4/UART_UART.c ****         UART_TX_FIFO_CTRL_REG = UART_UART_DEFAULT_TX_FIFO_CTRL;
  67              		.loc 1 264 0
  68 0030 1A4B     		ldr	r3, .L2+48
  69 0032 1C60     		str	r4, [r3]
 265:Generated_Source\PSoC4/UART_UART.c **** 
 266:Generated_Source\PSoC4/UART_UART.c ****     #if !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1)
 267:Generated_Source\PSoC4/UART_UART.c ****         UART_UART_FLOW_CTRL_REG = UART_UART_DEFAULT_FLOW_CTRL;
 268:Generated_Source\PSoC4/UART_UART.c ****     #endif /* !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1) */
 269:Generated_Source\PSoC4/UART_UART.c **** 
 270:Generated_Source\PSoC4/UART_UART.c ****         /* Configure interrupt with UART handler but do not enable it */
 271:Generated_Source\PSoC4/UART_UART.c ****     #if(UART_SCB_IRQ_INTERNAL)
 272:Generated_Source\PSoC4/UART_UART.c ****         CyIntDisable    (UART_ISR_NUMBER);
  70              		.loc 1 272 0
ARM GAS  C:\Users\GIANLU~1\AppData\Local\Temp\ccsLdGBK.s 			page 7


  71 0034 0B20     		movs	r0, #11
  72 0036 FFF7FEFF 		bl	CyIntDisable
  73              	.LVL0:
 273:Generated_Source\PSoC4/UART_UART.c ****         CyIntSetPriority(UART_ISR_NUMBER, UART_ISR_PRIORITY);
  74              		.loc 1 273 0
  75 003a 0321     		movs	r1, #3
  76 003c 0B20     		movs	r0, #11
  77 003e FFF7FEFF 		bl	CyIntSetPriority
  78              	.LVL1:
 274:Generated_Source\PSoC4/UART_UART.c ****         (void) CyIntSetVector(UART_ISR_NUMBER, &UART_SPI_UART_ISR);
  79              		.loc 1 274 0
  80 0042 1749     		ldr	r1, .L2+52
  81 0044 0B20     		movs	r0, #11
  82 0046 FFF7FEFF 		bl	CyIntSetVector
  83              	.LVL2:
 275:Generated_Source\PSoC4/UART_UART.c ****     #endif /* (UART_SCB_IRQ_INTERNAL) */
 276:Generated_Source\PSoC4/UART_UART.c **** 
 277:Generated_Source\PSoC4/UART_UART.c ****         /* Configure WAKE interrupt */
 278:Generated_Source\PSoC4/UART_UART.c ****     #if(UART_UART_RX_WAKEUP_IRQ)
 279:Generated_Source\PSoC4/UART_UART.c ****         CyIntDisable    (UART_RX_WAKE_ISR_NUMBER);
 280:Generated_Source\PSoC4/UART_UART.c ****         CyIntSetPriority(UART_RX_WAKE_ISR_NUMBER, UART_RX_WAKE_ISR_PRIORITY);
 281:Generated_Source\PSoC4/UART_UART.c ****         (void) CyIntSetVector(UART_RX_WAKE_ISR_NUMBER, &UART_UART_WAKEUP_ISR);
 282:Generated_Source\PSoC4/UART_UART.c ****     #endif /* (UART_UART_RX_WAKEUP_IRQ) */
 283:Generated_Source\PSoC4/UART_UART.c **** 
 284:Generated_Source\PSoC4/UART_UART.c ****         /* Configure interrupt sources */
 285:Generated_Source\PSoC4/UART_UART.c ****         UART_INTR_I2C_EC_MASK_REG = UART_UART_DEFAULT_INTR_I2C_EC_MASK;
  84              		.loc 1 285 0
  85 004a 164B     		ldr	r3, .L2+56
  86 004c 1C60     		str	r4, [r3]
 286:Generated_Source\PSoC4/UART_UART.c ****         UART_INTR_SPI_EC_MASK_REG = UART_UART_DEFAULT_INTR_SPI_EC_MASK;
  87              		.loc 1 286 0
  88 004e 164B     		ldr	r3, .L2+60
  89 0050 1C60     		str	r4, [r3]
 287:Generated_Source\PSoC4/UART_UART.c ****         UART_INTR_SLAVE_MASK_REG  = UART_UART_DEFAULT_INTR_SLAVE_MASK;
  90              		.loc 1 287 0
  91 0052 164B     		ldr	r3, .L2+64
  92 0054 1C60     		str	r4, [r3]
 288:Generated_Source\PSoC4/UART_UART.c ****         UART_INTR_MASTER_MASK_REG = UART_UART_DEFAULT_INTR_MASTER_MASK;
  93              		.loc 1 288 0
  94 0056 164B     		ldr	r3, .L2+68
  95 0058 1C60     		str	r4, [r3]
 289:Generated_Source\PSoC4/UART_UART.c ****         UART_INTR_RX_MASK_REG     = UART_UART_DEFAULT_INTR_RX_MASK;
  96              		.loc 1 289 0
  97 005a 164B     		ldr	r3, .L2+72
  98 005c 1C60     		str	r4, [r3]
 290:Generated_Source\PSoC4/UART_UART.c ****         UART_INTR_TX_MASK_REG     = UART_UART_DEFAULT_INTR_TX_MASK;
  99              		.loc 1 290 0
 100 005e 164B     		ldr	r3, .L2+76
 101 0060 1C60     		str	r4, [r3]
 291:Generated_Source\PSoC4/UART_UART.c **** 
 292:Generated_Source\PSoC4/UART_UART.c ****         /* Configure TX interrupt sources to restore. */
 293:Generated_Source\PSoC4/UART_UART.c ****         UART_IntrTxMask = LO16(UART_INTR_TX_MASK_REG);
 102              		.loc 1 293 0
 103 0062 1A68     		ldr	r2, [r3]
 104 0064 154B     		ldr	r3, .L2+80
 105 0066 1A80     		strh	r2, [r3]
 294:Generated_Source\PSoC4/UART_UART.c **** 
ARM GAS  C:\Users\GIANLU~1\AppData\Local\Temp\ccsLdGBK.s 			page 8


 295:Generated_Source\PSoC4/UART_UART.c ****     #if(UART_INTERNAL_RX_SW_BUFFER_CONST)
 296:Generated_Source\PSoC4/UART_UART.c ****         UART_rxBufferHead     = 0u;
 297:Generated_Source\PSoC4/UART_UART.c ****         UART_rxBufferTail     = 0u;
 298:Generated_Source\PSoC4/UART_UART.c ****         UART_rxBufferOverflow = 0u;
 299:Generated_Source\PSoC4/UART_UART.c ****     #endif /* (UART_INTERNAL_RX_SW_BUFFER_CONST) */
 300:Generated_Source\PSoC4/UART_UART.c **** 
 301:Generated_Source\PSoC4/UART_UART.c ****     #if(UART_INTERNAL_TX_SW_BUFFER_CONST)
 302:Generated_Source\PSoC4/UART_UART.c ****         UART_txBufferHead = 0u;
 303:Generated_Source\PSoC4/UART_UART.c ****         UART_txBufferTail = 0u;
 304:Generated_Source\PSoC4/UART_UART.c ****     #endif /* (UART_INTERNAL_TX_SW_BUFFER_CONST) */
 305:Generated_Source\PSoC4/UART_UART.c ****     }
 106              		.loc 1 305 0
 107              		@ sp needed
 108 0068 10BD     		pop	{r4, pc}
 109              	.L3:
 110 006a C046     		.align	2
 111              	.L2:
 112 006c 0F000002 		.word	33554447
 113 0070 00000740 		.word	1074200576
 114 0074 40000740 		.word	1074200640
 115 0078 01000A00 		.word	655361
 116 007c 48000740 		.word	1074200648
 117 0080 07020080 		.word	-2147483129
 118 0084 00030740 		.word	1074201344
 119 0088 04030740 		.word	1074201348
 120 008c 10030740 		.word	1074201360
 121 0090 44000740 		.word	1074200644
 122 0094 07000080 		.word	-2147483641
 123 0098 00020740 		.word	1074201088
 124 009c 04020740 		.word	1074201092
 125 00a0 00000000 		.word	UART_SPI_UART_ISR
 126 00a4 880E0740 		.word	1074204296
 127 00a8 C80E0740 		.word	1074204360
 128 00ac 480F0740 		.word	1074204488
 129 00b0 080F0740 		.word	1074204424
 130 00b4 C80F0740 		.word	1074204616
 131 00b8 880F0740 		.word	1074204552
 132 00bc 00000000 		.word	UART_IntrTxMask
 133              		.cfi_endproc
 134              	.LFE0:
 135              		.size	UART_UartInit, .-UART_UartInit
 136              		.section	.text.UART_UartPostEnable,"ax",%progbits
 137              		.align	2
 138              		.global	UART_UartPostEnable
 139              		.code	16
 140              		.thumb_func
 141              		.type	UART_UartPostEnable, %function
 142              	UART_UartPostEnable:
 143              	.LFB1:
 306:Generated_Source\PSoC4/UART_UART.c **** #endif /* (UART_SCB_MODE_UNCONFIG_CONST_CFG) */
 307:Generated_Source\PSoC4/UART_UART.c **** 
 308:Generated_Source\PSoC4/UART_UART.c **** 
 309:Generated_Source\PSoC4/UART_UART.c **** /*******************************************************************************
 310:Generated_Source\PSoC4/UART_UART.c **** * Function Name: UART_UartPostEnable
 311:Generated_Source\PSoC4/UART_UART.c **** ****************************************************************************//**
 312:Generated_Source\PSoC4/UART_UART.c **** *
 313:Generated_Source\PSoC4/UART_UART.c **** *  Restores HSIOM settings for the UART output pins (TX and/or RTS) to be
ARM GAS  C:\Users\GIANLU~1\AppData\Local\Temp\ccsLdGBK.s 			page 9


 314:Generated_Source\PSoC4/UART_UART.c **** *  controlled by the SCB UART.
 315:Generated_Source\PSoC4/UART_UART.c **** *
 316:Generated_Source\PSoC4/UART_UART.c **** *******************************************************************************/
 317:Generated_Source\PSoC4/UART_UART.c **** void UART_UartPostEnable(void)
 318:Generated_Source\PSoC4/UART_UART.c **** {
 144              		.loc 1 318 0
 145              		.cfi_startproc
 146              		@ args = 0, pretend = 0, frame = 0
 147              		@ frame_needed = 0, uses_anonymous_args = 0
 148              		@ link register save eliminated.
 319:Generated_Source\PSoC4/UART_UART.c **** #if (UART_SCB_MODE_UNCONFIG_CONST_CFG)
 320:Generated_Source\PSoC4/UART_UART.c ****     #if (UART_TX_SDA_MISO_PIN)
 321:Generated_Source\PSoC4/UART_UART.c ****         if (UART_CHECK_TX_SDA_MISO_PIN_USED)
 322:Generated_Source\PSoC4/UART_UART.c ****         {
 323:Generated_Source\PSoC4/UART_UART.c ****             /* Set SCB UART to drive the output pin */
 324:Generated_Source\PSoC4/UART_UART.c ****             UART_SET_HSIOM_SEL(UART_TX_SDA_MISO_HSIOM_REG, UART_TX_SDA_MISO_HSIOM_MASK,
 325:Generated_Source\PSoC4/UART_UART.c ****                                            UART_TX_SDA_MISO_HSIOM_POS, UART_TX_SDA_MISO_HSIOM_SEL_U
 326:Generated_Source\PSoC4/UART_UART.c ****         }
 327:Generated_Source\PSoC4/UART_UART.c ****     #endif /* (UART_TX_SDA_MISO_PIN_PIN) */
 328:Generated_Source\PSoC4/UART_UART.c **** 
 329:Generated_Source\PSoC4/UART_UART.c ****     #if !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1)
 330:Generated_Source\PSoC4/UART_UART.c ****         #if (UART_SS0_PIN)
 331:Generated_Source\PSoC4/UART_UART.c ****             if (UART_CHECK_SS0_PIN_USED)
 332:Generated_Source\PSoC4/UART_UART.c ****             {
 333:Generated_Source\PSoC4/UART_UART.c ****                 /* Set SCB UART to drive the output pin */
 334:Generated_Source\PSoC4/UART_UART.c ****                 UART_SET_HSIOM_SEL(UART_SS0_HSIOM_REG, UART_SS0_HSIOM_MASK,
 335:Generated_Source\PSoC4/UART_UART.c ****                                                UART_SS0_HSIOM_POS, UART_SS0_HSIOM_SEL_UART);
 336:Generated_Source\PSoC4/UART_UART.c ****             }
 337:Generated_Source\PSoC4/UART_UART.c ****         #endif /* (UART_SS0_PIN) */
 338:Generated_Source\PSoC4/UART_UART.c ****     #endif /* !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1) */
 339:Generated_Source\PSoC4/UART_UART.c **** 
 340:Generated_Source\PSoC4/UART_UART.c **** #else
 341:Generated_Source\PSoC4/UART_UART.c ****     #if (UART_UART_TX_PIN)
 342:Generated_Source\PSoC4/UART_UART.c ****          /* Set SCB UART to drive the output pin */
 343:Generated_Source\PSoC4/UART_UART.c ****         UART_SET_HSIOM_SEL(UART_TX_HSIOM_REG, UART_TX_HSIOM_MASK,
 149              		.loc 1 343 0
 150 0000 0549     		ldr	r1, .L5
 151 0002 0B68     		ldr	r3, [r1]
 152 0004 F022     		movs	r2, #240
 153 0006 9343     		bics	r3, r2
 154 0008 603A     		subs	r2, r2, #96
 155 000a 1343     		orrs	r3, r2
 156 000c 0B60     		str	r3, [r1]
 344:Generated_Source\PSoC4/UART_UART.c ****                                        UART_TX_HSIOM_POS, UART_TX_HSIOM_SEL_UART);
 345:Generated_Source\PSoC4/UART_UART.c ****     #endif /* (UART_UART_TX_PIN) */
 346:Generated_Source\PSoC4/UART_UART.c **** 
 347:Generated_Source\PSoC4/UART_UART.c ****     #if (UART_UART_RTS_PIN)
 348:Generated_Source\PSoC4/UART_UART.c ****         /* Set SCB UART to drive the output pin */
 349:Generated_Source\PSoC4/UART_UART.c ****         UART_SET_HSIOM_SEL(UART_RTS_HSIOM_REG, UART_RTS_HSIOM_MASK,
 350:Generated_Source\PSoC4/UART_UART.c ****                                        UART_RTS_HSIOM_POS, UART_RTS_HSIOM_SEL_UART);
 351:Generated_Source\PSoC4/UART_UART.c ****     #endif /* (UART_UART_RTS_PIN) */
 352:Generated_Source\PSoC4/UART_UART.c **** #endif /* (UART_SCB_MODE_UNCONFIG_CONST_CFG) */
 353:Generated_Source\PSoC4/UART_UART.c **** 
 354:Generated_Source\PSoC4/UART_UART.c ****     /* Restore TX interrupt sources. */
 355:Generated_Source\PSoC4/UART_UART.c ****     UART_SetTxInterruptMode(UART_IntrTxMask);
 157              		.loc 1 355 0
 158 000e 034B     		ldr	r3, .L5+4
ARM GAS  C:\Users\GIANLU~1\AppData\Local\Temp\ccsLdGBK.s 			page 10


 159 0010 1A88     		ldrh	r2, [r3]
 160 0012 034B     		ldr	r3, .L5+8
 161 0014 1A60     		str	r2, [r3]
 356:Generated_Source\PSoC4/UART_UART.c **** }
 162              		.loc 1 356 0
 163              		@ sp needed
 164 0016 7047     		bx	lr
 165              	.L6:
 166              		.align	2
 167              	.L5:
 168 0018 0C000140 		.word	1073807372
 169 001c 00000000 		.word	UART_IntrTxMask
 170 0020 880F0740 		.word	1074204552
 171              		.cfi_endproc
 172              	.LFE1:
 173              		.size	UART_UartPostEnable, .-UART_UartPostEnable
 174              		.section	.text.UART_UartStop,"ax",%progbits
 175              		.align	2
 176              		.global	UART_UartStop
 177              		.code	16
 178              		.thumb_func
 179              		.type	UART_UartStop, %function
 180              	UART_UartStop:
 181              	.LFB2:
 357:Generated_Source\PSoC4/UART_UART.c **** 
 358:Generated_Source\PSoC4/UART_UART.c **** 
 359:Generated_Source\PSoC4/UART_UART.c **** /*******************************************************************************
 360:Generated_Source\PSoC4/UART_UART.c **** * Function Name: UART_UartStop
 361:Generated_Source\PSoC4/UART_UART.c **** ****************************************************************************//**
 362:Generated_Source\PSoC4/UART_UART.c **** *
 363:Generated_Source\PSoC4/UART_UART.c **** *  Changes the HSIOM settings for the UART output pins (TX and/or RTS) to keep
 364:Generated_Source\PSoC4/UART_UART.c **** *  them inactive after the block is disabled. The output pins are controlled by
 365:Generated_Source\PSoC4/UART_UART.c **** *  the GPIO data register. Also, the function disables the skip start feature
 366:Generated_Source\PSoC4/UART_UART.c **** *  to not cause it to trigger after the component is enabled.
 367:Generated_Source\PSoC4/UART_UART.c **** *
 368:Generated_Source\PSoC4/UART_UART.c **** *******************************************************************************/
 369:Generated_Source\PSoC4/UART_UART.c **** void UART_UartStop(void)
 370:Generated_Source\PSoC4/UART_UART.c **** {
 182              		.loc 1 370 0
 183              		.cfi_startproc
 184              		@ args = 0, pretend = 0, frame = 0
 185              		@ frame_needed = 0, uses_anonymous_args = 0
 186              		@ link register save eliminated.
 371:Generated_Source\PSoC4/UART_UART.c **** #if(UART_SCB_MODE_UNCONFIG_CONST_CFG)
 372:Generated_Source\PSoC4/UART_UART.c ****     #if (UART_TX_SDA_MISO_PIN)
 373:Generated_Source\PSoC4/UART_UART.c ****         if (UART_CHECK_TX_SDA_MISO_PIN_USED)
 374:Generated_Source\PSoC4/UART_UART.c ****         {
 375:Generated_Source\PSoC4/UART_UART.c ****             /* Set GPIO to drive output pin */
 376:Generated_Source\PSoC4/UART_UART.c ****             UART_SET_HSIOM_SEL(UART_TX_SDA_MISO_HSIOM_REG, UART_TX_SDA_MISO_HSIOM_MASK,
 377:Generated_Source\PSoC4/UART_UART.c ****                                            UART_TX_SDA_MISO_HSIOM_POS, UART_TX_SDA_MISO_HSIOM_SEL_G
 378:Generated_Source\PSoC4/UART_UART.c ****         }
 379:Generated_Source\PSoC4/UART_UART.c ****     #endif /* (UART_TX_SDA_MISO_PIN_PIN) */
 380:Generated_Source\PSoC4/UART_UART.c **** 
 381:Generated_Source\PSoC4/UART_UART.c ****     #if !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1)
 382:Generated_Source\PSoC4/UART_UART.c ****         #if (UART_SS0_PIN)
 383:Generated_Source\PSoC4/UART_UART.c ****             if (UART_CHECK_SS0_PIN_USED)
 384:Generated_Source\PSoC4/UART_UART.c ****             {
ARM GAS  C:\Users\GIANLU~1\AppData\Local\Temp\ccsLdGBK.s 			page 11


 385:Generated_Source\PSoC4/UART_UART.c ****                 /* Set output pin state after block is disabled */
 386:Generated_Source\PSoC4/UART_UART.c ****                 UART_spi_ss0_Write(UART_GET_UART_RTS_INACTIVE);
 387:Generated_Source\PSoC4/UART_UART.c **** 
 388:Generated_Source\PSoC4/UART_UART.c ****                 /* Set GPIO to drive output pin */
 389:Generated_Source\PSoC4/UART_UART.c ****                 UART_SET_HSIOM_SEL(UART_SS0_HSIOM_REG, UART_SS0_HSIOM_MASK,
 390:Generated_Source\PSoC4/UART_UART.c ****                                                UART_SS0_HSIOM_POS, UART_SS0_HSIOM_SEL_GPIO);
 391:Generated_Source\PSoC4/UART_UART.c ****             }
 392:Generated_Source\PSoC4/UART_UART.c ****         #endif /* (UART_SS0_PIN) */
 393:Generated_Source\PSoC4/UART_UART.c ****     #endif /* !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1) */
 394:Generated_Source\PSoC4/UART_UART.c **** 
 395:Generated_Source\PSoC4/UART_UART.c **** #else
 396:Generated_Source\PSoC4/UART_UART.c ****     #if (UART_UART_TX_PIN)
 397:Generated_Source\PSoC4/UART_UART.c ****         /* Set GPIO to drive output pin */
 398:Generated_Source\PSoC4/UART_UART.c ****         UART_SET_HSIOM_SEL(UART_TX_HSIOM_REG, UART_TX_HSIOM_MASK,
 187              		.loc 1 398 0
 188 0000 064A     		ldr	r2, .L8
 189 0002 1368     		ldr	r3, [r2]
 190 0004 F021     		movs	r1, #240
 191 0006 8B43     		bics	r3, r1
 192 0008 1360     		str	r3, [r2]
 399:Generated_Source\PSoC4/UART_UART.c ****                                        UART_TX_HSIOM_POS, UART_TX_HSIOM_SEL_GPIO);
 400:Generated_Source\PSoC4/UART_UART.c ****     #endif /* (UART_UART_TX_PIN) */
 401:Generated_Source\PSoC4/UART_UART.c **** 
 402:Generated_Source\PSoC4/UART_UART.c ****     #if (UART_UART_RTS_PIN)
 403:Generated_Source\PSoC4/UART_UART.c ****         /* Set output pin state after block is disabled */
 404:Generated_Source\PSoC4/UART_UART.c ****         UART_rts_Write(UART_GET_UART_RTS_INACTIVE);
 405:Generated_Source\PSoC4/UART_UART.c **** 
 406:Generated_Source\PSoC4/UART_UART.c ****         /* Set GPIO to drive output pin */
 407:Generated_Source\PSoC4/UART_UART.c ****         UART_SET_HSIOM_SEL(UART_RTS_HSIOM_REG, UART_RTS_HSIOM_MASK,
 408:Generated_Source\PSoC4/UART_UART.c ****                                        UART_RTS_HSIOM_POS, UART_RTS_HSIOM_SEL_GPIO);
 409:Generated_Source\PSoC4/UART_UART.c ****     #endif /* (UART_UART_RTS_PIN) */
 410:Generated_Source\PSoC4/UART_UART.c **** 
 411:Generated_Source\PSoC4/UART_UART.c **** #endif /* (UART_SCB_MODE_UNCONFIG_CONST_CFG) */
 412:Generated_Source\PSoC4/UART_UART.c **** 
 413:Generated_Source\PSoC4/UART_UART.c **** #if (UART_UART_WAKE_ENABLE_CONST)
 414:Generated_Source\PSoC4/UART_UART.c ****     /* Disable skip start feature used for wakeup */
 415:Generated_Source\PSoC4/UART_UART.c ****     UART_UART_RX_CTRL_REG &= (uint32) ~UART_UART_RX_CTRL_SKIP_START;
 416:Generated_Source\PSoC4/UART_UART.c **** #endif /* (UART_UART_WAKE_ENABLE_CONST) */
 417:Generated_Source\PSoC4/UART_UART.c **** 
 418:Generated_Source\PSoC4/UART_UART.c ****     /* Store TX interrupt sources (exclude level triggered). */
 419:Generated_Source\PSoC4/UART_UART.c ****     UART_IntrTxMask = LO16(UART_GetTxInterruptMode() & UART_INTR_UART_TX_RESTORE);
 193              		.loc 1 419 0
 194 000a 054B     		ldr	r3, .L8+4
 195 000c 1A68     		ldr	r2, [r3]
 196 000e E423     		movs	r3, #228
 197 0010 DB00     		lsls	r3, r3, #3
 198 0012 1340     		ands	r3, r2
 199 0014 034A     		ldr	r2, .L8+8
 200 0016 1380     		strh	r3, [r2]
 420:Generated_Source\PSoC4/UART_UART.c **** }
 201              		.loc 1 420 0
 202              		@ sp needed
 203 0018 7047     		bx	lr
 204              	.L9:
 205 001a C046     		.align	2
 206              	.L8:
 207 001c 0C000140 		.word	1073807372
ARM GAS  C:\Users\GIANLU~1\AppData\Local\Temp\ccsLdGBK.s 			page 12


 208 0020 880F0740 		.word	1074204552
 209 0024 00000000 		.word	UART_IntrTxMask
 210              		.cfi_endproc
 211              	.LFE2:
 212              		.size	UART_UartStop, .-UART_UartStop
 213              		.section	.text.UART_UartSetRxAddress,"ax",%progbits
 214              		.align	2
 215              		.global	UART_UartSetRxAddress
 216              		.code	16
 217              		.thumb_func
 218              		.type	UART_UartSetRxAddress, %function
 219              	UART_UartSetRxAddress:
 220              	.LFB3:
 421:Generated_Source\PSoC4/UART_UART.c **** 
 422:Generated_Source\PSoC4/UART_UART.c **** 
 423:Generated_Source\PSoC4/UART_UART.c **** /*******************************************************************************
 424:Generated_Source\PSoC4/UART_UART.c **** * Function Name: UART_UartSetRxAddress
 425:Generated_Source\PSoC4/UART_UART.c **** ****************************************************************************//**
 426:Generated_Source\PSoC4/UART_UART.c **** *
 427:Generated_Source\PSoC4/UART_UART.c **** *  Sets the hardware detectable receiver address for the UART in the
 428:Generated_Source\PSoC4/UART_UART.c **** *  Multiprocessor mode.
 429:Generated_Source\PSoC4/UART_UART.c **** *
 430:Generated_Source\PSoC4/UART_UART.c **** *  \param address: Address for hardware address detection.
 431:Generated_Source\PSoC4/UART_UART.c **** *
 432:Generated_Source\PSoC4/UART_UART.c **** *******************************************************************************/
 433:Generated_Source\PSoC4/UART_UART.c **** void UART_UartSetRxAddress(uint32 address)
 434:Generated_Source\PSoC4/UART_UART.c **** {
 221              		.loc 1 434 0
 222              		.cfi_startproc
 223              		@ args = 0, pretend = 0, frame = 0
 224              		@ frame_needed = 0, uses_anonymous_args = 0
 225              		@ link register save eliminated.
 226              	.LVL3:
 435:Generated_Source\PSoC4/UART_UART.c ****      uint32 matchReg;
 436:Generated_Source\PSoC4/UART_UART.c **** 
 437:Generated_Source\PSoC4/UART_UART.c ****     matchReg = UART_RX_MATCH_REG;
 227              		.loc 1 437 0
 228 0000 034A     		ldr	r2, .L11
 229 0002 1368     		ldr	r3, [r2]
 230              	.LVL4:
 438:Generated_Source\PSoC4/UART_UART.c **** 
 439:Generated_Source\PSoC4/UART_UART.c ****     matchReg &= ((uint32) ~UART_RX_MATCH_ADDR_MASK); /* Clear address bits */
 231              		.loc 1 439 0
 232 0004 FF21     		movs	r1, #255
 233 0006 8B43     		bics	r3, r1
 234              	.LVL5:
 440:Generated_Source\PSoC4/UART_UART.c ****     matchReg |= ((uint32)  (address & UART_RX_MATCH_ADDR_MASK)); /* Set address  */
 235              		.loc 1 440 0
 236 0008 0840     		ands	r0, r1
 237              	.LVL6:
 238 000a 1843     		orrs	r0, r3
 239              	.LVL7:
 441:Generated_Source\PSoC4/UART_UART.c **** 
 442:Generated_Source\PSoC4/UART_UART.c ****     UART_RX_MATCH_REG = matchReg;
 240              		.loc 1 442 0
 241 000c 1060     		str	r0, [r2]
 443:Generated_Source\PSoC4/UART_UART.c **** }
ARM GAS  C:\Users\GIANLU~1\AppData\Local\Temp\ccsLdGBK.s 			page 13


 242              		.loc 1 443 0
 243              		@ sp needed
 244 000e 7047     		bx	lr
 245              	.L12:
 246              		.align	2
 247              	.L11:
 248 0010 10030740 		.word	1074201360
 249              		.cfi_endproc
 250              	.LFE3:
 251              		.size	UART_UartSetRxAddress, .-UART_UartSetRxAddress
 252              		.section	.text.UART_UartSetRxAddressMask,"ax",%progbits
 253              		.align	2
 254              		.global	UART_UartSetRxAddressMask
 255              		.code	16
 256              		.thumb_func
 257              		.type	UART_UartSetRxAddressMask, %function
 258              	UART_UartSetRxAddressMask:
 259              	.LFB4:
 444:Generated_Source\PSoC4/UART_UART.c **** 
 445:Generated_Source\PSoC4/UART_UART.c **** 
 446:Generated_Source\PSoC4/UART_UART.c **** /*******************************************************************************
 447:Generated_Source\PSoC4/UART_UART.c **** * Function Name: UART_UartSetRxAddressMask
 448:Generated_Source\PSoC4/UART_UART.c **** ****************************************************************************//**
 449:Generated_Source\PSoC4/UART_UART.c **** *
 450:Generated_Source\PSoC4/UART_UART.c **** *  Sets the hardware address mask for the UART in the Multiprocessor mode.
 451:Generated_Source\PSoC4/UART_UART.c **** *
 452:Generated_Source\PSoC4/UART_UART.c **** *  \param addressMask: Address mask.
 453:Generated_Source\PSoC4/UART_UART.c **** *   - Bit value 0 – excludes bit from address comparison.
 454:Generated_Source\PSoC4/UART_UART.c **** *   - Bit value 1 – the bit needs to match with the corresponding bit
 455:Generated_Source\PSoC4/UART_UART.c **** *     of the address.
 456:Generated_Source\PSoC4/UART_UART.c **** *
 457:Generated_Source\PSoC4/UART_UART.c **** *******************************************************************************/
 458:Generated_Source\PSoC4/UART_UART.c **** void UART_UartSetRxAddressMask(uint32 addressMask)
 459:Generated_Source\PSoC4/UART_UART.c **** {
 260              		.loc 1 459 0
 261              		.cfi_startproc
 262              		@ args = 0, pretend = 0, frame = 0
 263              		@ frame_needed = 0, uses_anonymous_args = 0
 264              		@ link register save eliminated.
 265              	.LVL8:
 460:Generated_Source\PSoC4/UART_UART.c ****     uint32 matchReg;
 461:Generated_Source\PSoC4/UART_UART.c **** 
 462:Generated_Source\PSoC4/UART_UART.c ****     matchReg = UART_RX_MATCH_REG;
 266              		.loc 1 462 0
 267 0000 034A     		ldr	r2, .L14
 268 0002 1168     		ldr	r1, [r2]
 269              	.LVL9:
 463:Generated_Source\PSoC4/UART_UART.c **** 
 464:Generated_Source\PSoC4/UART_UART.c ****     matchReg &= ((uint32) ~UART_RX_MATCH_MASK_MASK); /* Clear address mask bits */
 270              		.loc 1 464 0
 271 0004 034B     		ldr	r3, .L14+4
 272 0006 0B40     		ands	r3, r1
 273              	.LVL10:
 465:Generated_Source\PSoC4/UART_UART.c ****     matchReg |= ((uint32) (addressMask << UART_RX_MATCH_MASK_POS));
 274              		.loc 1 465 0
 275 0008 0004     		lsls	r0, r0, #16
 276              	.LVL11:
ARM GAS  C:\Users\GIANLU~1\AppData\Local\Temp\ccsLdGBK.s 			page 14


 277 000a 1843     		orrs	r0, r3
 278              	.LVL12:
 466:Generated_Source\PSoC4/UART_UART.c **** 
 467:Generated_Source\PSoC4/UART_UART.c ****     UART_RX_MATCH_REG = matchReg;
 279              		.loc 1 467 0
 280 000c 1060     		str	r0, [r2]
 468:Generated_Source\PSoC4/UART_UART.c **** }
 281              		.loc 1 468 0
 282              		@ sp needed
 283 000e 7047     		bx	lr
 284              	.L15:
 285              		.align	2
 286              	.L14:
 287 0010 10030740 		.word	1074201360
 288 0014 FFFF00FF 		.word	-16711681
 289              		.cfi_endproc
 290              	.LFE4:
 291              		.size	UART_UartSetRxAddressMask, .-UART_UartSetRxAddressMask
 292              		.section	.text.UART_UartGetChar,"ax",%progbits
 293              		.align	2
 294              		.global	UART_UartGetChar
 295              		.code	16
 296              		.thumb_func
 297              		.type	UART_UartGetChar, %function
 298              	UART_UartGetChar:
 299              	.LFB5:
 469:Generated_Source\PSoC4/UART_UART.c **** 
 470:Generated_Source\PSoC4/UART_UART.c **** 
 471:Generated_Source\PSoC4/UART_UART.c **** #if(UART_UART_RX_DIRECTION)
 472:Generated_Source\PSoC4/UART_UART.c ****     /*******************************************************************************
 473:Generated_Source\PSoC4/UART_UART.c ****     * Function Name: UART_UartGetChar
 474:Generated_Source\PSoC4/UART_UART.c ****     ****************************************************************************//**
 475:Generated_Source\PSoC4/UART_UART.c ****     *
 476:Generated_Source\PSoC4/UART_UART.c ****     *  Retrieves next data element from receive buffer.
 477:Generated_Source\PSoC4/UART_UART.c ****     *  This function is designed for ASCII characters and returns a char where
 478:Generated_Source\PSoC4/UART_UART.c ****     *  1 to 255 are valid characters and 0 indicates an error occurred or no data
 479:Generated_Source\PSoC4/UART_UART.c ****     *  is present.
 480:Generated_Source\PSoC4/UART_UART.c ****     *  - RX software buffer is disabled: Returns data element retrieved from RX
 481:Generated_Source\PSoC4/UART_UART.c ****     *    FIFO.
 482:Generated_Source\PSoC4/UART_UART.c ****     *  - RX software buffer is enabled: Returns data element from the software
 483:Generated_Source\PSoC4/UART_UART.c ****     *    receive buffer.
 484:Generated_Source\PSoC4/UART_UART.c ****     *
 485:Generated_Source\PSoC4/UART_UART.c ****     *  \return
 486:Generated_Source\PSoC4/UART_UART.c ****     *   Next data element from the receive buffer. ASCII character values from
 487:Generated_Source\PSoC4/UART_UART.c ****     *   1 to 255 are valid. A returned zero signifies an error condition or no
 488:Generated_Source\PSoC4/UART_UART.c ****     *   data available.
 489:Generated_Source\PSoC4/UART_UART.c ****     *
 490:Generated_Source\PSoC4/UART_UART.c ****     *  \sideeffect
 491:Generated_Source\PSoC4/UART_UART.c ****     *   The errors bits may not correspond with reading characters due to
 492:Generated_Source\PSoC4/UART_UART.c ****     *   RX FIFO and software buffer usage.
 493:Generated_Source\PSoC4/UART_UART.c ****     *   RX software buffer is enabled: The internal software buffer overflow
 494:Generated_Source\PSoC4/UART_UART.c ****     *   is not treated as an error condition.
 495:Generated_Source\PSoC4/UART_UART.c ****     *   Check UART_rxBufferOverflow to capture that error condition.
 496:Generated_Source\PSoC4/UART_UART.c ****     *
 497:Generated_Source\PSoC4/UART_UART.c ****     *******************************************************************************/
 498:Generated_Source\PSoC4/UART_UART.c ****     uint32 UART_UartGetChar(void)
 499:Generated_Source\PSoC4/UART_UART.c ****     {
ARM GAS  C:\Users\GIANLU~1\AppData\Local\Temp\ccsLdGBK.s 			page 15


 300              		.loc 1 499 0
 301              		.cfi_startproc
 302              		@ args = 0, pretend = 0, frame = 0
 303              		@ frame_needed = 0, uses_anonymous_args = 0
 304 0000 10B5     		push	{r4, lr}
 305              		.cfi_def_cfa_offset 8
 306              		.cfi_offset 4, -8
 307              		.cfi_offset 14, -4
 308              	.LVL13:
 500:Generated_Source\PSoC4/UART_UART.c ****         uint32 rxData = 0u;
 501:Generated_Source\PSoC4/UART_UART.c **** 
 502:Generated_Source\PSoC4/UART_UART.c ****         /* Reads data only if there is data to read */
 503:Generated_Source\PSoC4/UART_UART.c ****         if (0u != UART_SpiUartGetRxBufferSize())
 309              		.loc 1 503 0
 310 0002 FFF7FEFF 		bl	UART_SpiUartGetRxBufferSize
 311              	.LVL14:
 312 0006 0028     		cmp	r0, #0
 313 0008 02D0     		beq	.L19
 504:Generated_Source\PSoC4/UART_UART.c ****         {
 505:Generated_Source\PSoC4/UART_UART.c ****             rxData = UART_SpiUartReadRxData();
 314              		.loc 1 505 0
 315 000a FFF7FEFF 		bl	UART_SpiUartReadRxData
 316              	.LVL15:
 317 000e 00E0     		b	.L17
 318              	.LVL16:
 319              	.L19:
 500:Generated_Source\PSoC4/UART_UART.c ****         uint32 rxData = 0u;
 320              		.loc 1 500 0
 321 0010 0020     		movs	r0, #0
 322              	.LVL17:
 323              	.L17:
 506:Generated_Source\PSoC4/UART_UART.c ****         }
 507:Generated_Source\PSoC4/UART_UART.c **** 
 508:Generated_Source\PSoC4/UART_UART.c ****         if (UART_CHECK_INTR_RX(UART_INTR_RX_ERR))
 324              		.loc 1 508 0
 325 0012 054B     		ldr	r3, .L20
 326 0014 1A68     		ldr	r2, [r3]
 327 0016 D823     		movs	r3, #216
 328 0018 9B00     		lsls	r3, r3, #2
 329 001a 1A42     		tst	r2, r3
 330 001c 03D0     		beq	.L18
 331              	.LVL18:
 509:Generated_Source\PSoC4/UART_UART.c ****         {
 510:Generated_Source\PSoC4/UART_UART.c ****             rxData = 0u; /* Error occurred: returns zero */
 511:Generated_Source\PSoC4/UART_UART.c ****             UART_ClearRxInterruptSource(UART_INTR_RX_ERR);
 332              		.loc 1 511 0
 333 001e 1A00     		movs	r2, r3
 334 0020 014B     		ldr	r3, .L20
 335 0022 1A60     		str	r2, [r3]
 510:Generated_Source\PSoC4/UART_UART.c ****             UART_ClearRxInterruptSource(UART_INTR_RX_ERR);
 336              		.loc 1 510 0
 337 0024 0020     		movs	r0, #0
 338              	.LVL19:
 339              	.L18:
 512:Generated_Source\PSoC4/UART_UART.c ****         }
 513:Generated_Source\PSoC4/UART_UART.c **** 
 514:Generated_Source\PSoC4/UART_UART.c ****         return (rxData);
ARM GAS  C:\Users\GIANLU~1\AppData\Local\Temp\ccsLdGBK.s 			page 16


 515:Generated_Source\PSoC4/UART_UART.c ****     }
 340              		.loc 1 515 0
 341              		@ sp needed
 342 0026 10BD     		pop	{r4, pc}
 343              	.L21:
 344              		.align	2
 345              	.L20:
 346 0028 C00F0740 		.word	1074204608
 347              		.cfi_endproc
 348              	.LFE5:
 349              		.size	UART_UartGetChar, .-UART_UartGetChar
 350              		.section	.text.UART_UartGetByte,"ax",%progbits
 351              		.align	2
 352              		.global	UART_UartGetByte
 353              		.code	16
 354              		.thumb_func
 355              		.type	UART_UartGetByte, %function
 356              	UART_UartGetByte:
 357              	.LFB6:
 516:Generated_Source\PSoC4/UART_UART.c **** 
 517:Generated_Source\PSoC4/UART_UART.c **** 
 518:Generated_Source\PSoC4/UART_UART.c ****     /*******************************************************************************
 519:Generated_Source\PSoC4/UART_UART.c ****     * Function Name: UART_UartGetByte
 520:Generated_Source\PSoC4/UART_UART.c ****     ****************************************************************************//**
 521:Generated_Source\PSoC4/UART_UART.c ****     *
 522:Generated_Source\PSoC4/UART_UART.c ****     *  Retrieves the next data element from the receive buffer, returns the
 523:Generated_Source\PSoC4/UART_UART.c ****     *  received byte and error condition.
 524:Generated_Source\PSoC4/UART_UART.c ****     *   - The RX software buffer is disabled: returns the data element retrieved
 525:Generated_Source\PSoC4/UART_UART.c ****     *     from the RX FIFO. Undefined data will be returned if the RX FIFO is
 526:Generated_Source\PSoC4/UART_UART.c ****     *     empty.
 527:Generated_Source\PSoC4/UART_UART.c ****     *   - The RX software buffer is enabled: returns data element from the
 528:Generated_Source\PSoC4/UART_UART.c ****     *     software receive buffer.
 529:Generated_Source\PSoC4/UART_UART.c ****     *
 530:Generated_Source\PSoC4/UART_UART.c ****     *  \return
 531:Generated_Source\PSoC4/UART_UART.c ****     *   Bits 7-0 contain the next data element from the receive buffer and
 532:Generated_Source\PSoC4/UART_UART.c ****     *   other bits contain the error condition.
 533:Generated_Source\PSoC4/UART_UART.c ****     *   - UART_UART_RX_OVERFLOW - Attempt to write to a full
 534:Generated_Source\PSoC4/UART_UART.c ****     *     receiver FIFO.
 535:Generated_Source\PSoC4/UART_UART.c ****     *   - UART_UART_RX_UNDERFLOW    Attempt to read from an empty
 536:Generated_Source\PSoC4/UART_UART.c ****     *     receiver FIFO.
 537:Generated_Source\PSoC4/UART_UART.c ****     *   - UART_UART_RX_FRAME_ERROR - UART framing error detected.
 538:Generated_Source\PSoC4/UART_UART.c ****     *   - UART_UART_RX_PARITY_ERROR - UART parity error detected.
 539:Generated_Source\PSoC4/UART_UART.c ****     *
 540:Generated_Source\PSoC4/UART_UART.c ****     *  \sideeffect
 541:Generated_Source\PSoC4/UART_UART.c ****     *   The errors bits may not correspond with reading characters due to
 542:Generated_Source\PSoC4/UART_UART.c ****     *   RX FIFO and software buffer usage.
 543:Generated_Source\PSoC4/UART_UART.c ****     *   RX software buffer is enabled: The internal software buffer overflow
 544:Generated_Source\PSoC4/UART_UART.c ****     *   is not treated as an error condition.
 545:Generated_Source\PSoC4/UART_UART.c ****     *   Check UART_rxBufferOverflow to capture that error condition.
 546:Generated_Source\PSoC4/UART_UART.c ****     *
 547:Generated_Source\PSoC4/UART_UART.c ****     *******************************************************************************/
 548:Generated_Source\PSoC4/UART_UART.c ****     uint32 UART_UartGetByte(void)
 549:Generated_Source\PSoC4/UART_UART.c ****     {
 358              		.loc 1 549 0
 359              		.cfi_startproc
 360              		@ args = 0, pretend = 0, frame = 0
 361              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\GIANLU~1\AppData\Local\Temp\ccsLdGBK.s 			page 17


 362 0000 10B5     		push	{r4, lr}
 363              		.cfi_def_cfa_offset 8
 364              		.cfi_offset 4, -8
 365              		.cfi_offset 14, -4
 550:Generated_Source\PSoC4/UART_UART.c ****         uint32 rxData;
 551:Generated_Source\PSoC4/UART_UART.c ****         uint32 tmpStatus;
 552:Generated_Source\PSoC4/UART_UART.c **** 
 553:Generated_Source\PSoC4/UART_UART.c ****         #if (UART_CHECK_RX_SW_BUFFER)
 554:Generated_Source\PSoC4/UART_UART.c ****         {
 555:Generated_Source\PSoC4/UART_UART.c ****             UART_DisableInt();
 556:Generated_Source\PSoC4/UART_UART.c ****         }
 557:Generated_Source\PSoC4/UART_UART.c ****         #endif
 558:Generated_Source\PSoC4/UART_UART.c **** 
 559:Generated_Source\PSoC4/UART_UART.c ****         if (0u != UART_SpiUartGetRxBufferSize())
 366              		.loc 1 559 0
 367 0002 FFF7FEFF 		bl	UART_SpiUartGetRxBufferSize
 368              	.LVL20:
 369 0006 0028     		cmp	r0, #0
 370 0008 02D0     		beq	.L23
 560:Generated_Source\PSoC4/UART_UART.c ****         {
 561:Generated_Source\PSoC4/UART_UART.c ****             /* Enables interrupt to receive more bytes: at least one byte is in
 562:Generated_Source\PSoC4/UART_UART.c ****             * buffer.
 563:Generated_Source\PSoC4/UART_UART.c ****             */
 564:Generated_Source\PSoC4/UART_UART.c ****             #if (UART_CHECK_RX_SW_BUFFER)
 565:Generated_Source\PSoC4/UART_UART.c ****             {
 566:Generated_Source\PSoC4/UART_UART.c ****                 UART_EnableInt();
 567:Generated_Source\PSoC4/UART_UART.c ****             }
 568:Generated_Source\PSoC4/UART_UART.c ****             #endif
 569:Generated_Source\PSoC4/UART_UART.c **** 
 570:Generated_Source\PSoC4/UART_UART.c ****             /* Get received byte */
 571:Generated_Source\PSoC4/UART_UART.c ****             rxData = UART_SpiUartReadRxData();
 371              		.loc 1 571 0
 372 000a FFF7FEFF 		bl	UART_SpiUartReadRxData
 373              	.LVL21:
 374 000e 01E0     		b	.L24
 375              	.LVL22:
 376              	.L23:
 572:Generated_Source\PSoC4/UART_UART.c ****         }
 573:Generated_Source\PSoC4/UART_UART.c ****         else
 574:Generated_Source\PSoC4/UART_UART.c ****         {
 575:Generated_Source\PSoC4/UART_UART.c ****             /* Reads a byte directly from RX FIFO: underflow is raised in the
 576:Generated_Source\PSoC4/UART_UART.c ****             * case of empty. Otherwise the first received byte will be read.
 577:Generated_Source\PSoC4/UART_UART.c ****             */
 578:Generated_Source\PSoC4/UART_UART.c ****             rxData = UART_RX_FIFO_RD_REG;
 377              		.loc 1 578 0
 378 0010 064B     		ldr	r3, .L25
 379 0012 1868     		ldr	r0, [r3]
 380              	.LVL23:
 381              	.L24:
 579:Generated_Source\PSoC4/UART_UART.c **** 
 580:Generated_Source\PSoC4/UART_UART.c **** 
 581:Generated_Source\PSoC4/UART_UART.c ****             /* Enables interrupt to receive more bytes. */
 582:Generated_Source\PSoC4/UART_UART.c ****             #if (UART_CHECK_RX_SW_BUFFER)
 583:Generated_Source\PSoC4/UART_UART.c ****             {
 584:Generated_Source\PSoC4/UART_UART.c **** 
 585:Generated_Source\PSoC4/UART_UART.c ****                 /* The byte has been read from RX FIFO. Clear RX interrupt to
 586:Generated_Source\PSoC4/UART_UART.c ****                 * not involve interrupt handler when RX FIFO is empty.
ARM GAS  C:\Users\GIANLU~1\AppData\Local\Temp\ccsLdGBK.s 			page 18


 587:Generated_Source\PSoC4/UART_UART.c ****                 */
 588:Generated_Source\PSoC4/UART_UART.c ****                 UART_ClearRxInterruptSource(UART_INTR_RX_NOT_EMPTY);
 589:Generated_Source\PSoC4/UART_UART.c **** 
 590:Generated_Source\PSoC4/UART_UART.c ****                 UART_EnableInt();
 591:Generated_Source\PSoC4/UART_UART.c ****             }
 592:Generated_Source\PSoC4/UART_UART.c ****             #endif
 593:Generated_Source\PSoC4/UART_UART.c ****         }
 594:Generated_Source\PSoC4/UART_UART.c **** 
 595:Generated_Source\PSoC4/UART_UART.c ****         /* Get and clear RX error mask */
 596:Generated_Source\PSoC4/UART_UART.c ****         tmpStatus = (UART_GetRxInterruptSource() & UART_INTR_RX_ERR);
 382              		.loc 1 596 0
 383 0014 064A     		ldr	r2, .L25+4
 384 0016 1368     		ldr	r3, [r2]
 385              	.LVL24:
 597:Generated_Source\PSoC4/UART_UART.c ****         UART_ClearRxInterruptSource(UART_INTR_RX_ERR);
 386              		.loc 1 597 0
 387 0018 D821     		movs	r1, #216
 388 001a 8900     		lsls	r1, r1, #2
 389 001c 1160     		str	r1, [r2]
 598:Generated_Source\PSoC4/UART_UART.c **** 
 599:Generated_Source\PSoC4/UART_UART.c ****         /* Puts together data and error status:
 600:Generated_Source\PSoC4/UART_UART.c ****         * MP mode and accept address: 9th bit is set to notify mark.
 601:Generated_Source\PSoC4/UART_UART.c ****         */
 602:Generated_Source\PSoC4/UART_UART.c ****         rxData |= ((uint32) (tmpStatus << 8u));
 390              		.loc 1 602 0
 391 001e 1B02     		lsls	r3, r3, #8
 392              	.LVL25:
 393 0020 D822     		movs	r2, #216
 394 0022 9202     		lsls	r2, r2, #10
 395 0024 1340     		ands	r3, r2
 396 0026 1843     		orrs	r0, r3
 397              	.LVL26:
 603:Generated_Source\PSoC4/UART_UART.c **** 
 604:Generated_Source\PSoC4/UART_UART.c ****         return (rxData);
 605:Generated_Source\PSoC4/UART_UART.c ****     }
 398              		.loc 1 605 0
 399              		@ sp needed
 400 0028 10BD     		pop	{r4, pc}
 401              	.L26:
 402 002a C046     		.align	2
 403              	.L25:
 404 002c 40030740 		.word	1074201408
 405 0030 C00F0740 		.word	1074204608
 406              		.cfi_endproc
 407              	.LFE6:
 408              		.size	UART_UartGetByte, .-UART_UartGetByte
 409              		.section	.text.UART_UartPutString,"ax",%progbits
 410              		.align	2
 411              		.global	UART_UartPutString
 412              		.code	16
 413              		.thumb_func
 414              		.type	UART_UartPutString, %function
 415              	UART_UartPutString:
 416              	.LFB7:
 606:Generated_Source\PSoC4/UART_UART.c **** 
 607:Generated_Source\PSoC4/UART_UART.c **** 
 608:Generated_Source\PSoC4/UART_UART.c ****     #if !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1)
ARM GAS  C:\Users\GIANLU~1\AppData\Local\Temp\ccsLdGBK.s 			page 19


 609:Generated_Source\PSoC4/UART_UART.c ****         /*******************************************************************************
 610:Generated_Source\PSoC4/UART_UART.c ****         * Function Name: UART_UartSetRtsPolarity
 611:Generated_Source\PSoC4/UART_UART.c ****         ****************************************************************************//**
 612:Generated_Source\PSoC4/UART_UART.c ****         *
 613:Generated_Source\PSoC4/UART_UART.c ****         *  Sets active polarity of RTS output signal.
 614:Generated_Source\PSoC4/UART_UART.c ****         *  Only available for PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4100M / PSoC 4200M /
 615:Generated_Source\PSoC4/UART_UART.c ****         *  PSoC 4200L / PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices.
 616:Generated_Source\PSoC4/UART_UART.c ****         *
 617:Generated_Source\PSoC4/UART_UART.c ****         *  \param polarity: Active polarity of RTS output signal.
 618:Generated_Source\PSoC4/UART_UART.c ****         *   - UART_UART_RTS_ACTIVE_LOW  - RTS signal is active low.
 619:Generated_Source\PSoC4/UART_UART.c ****         *   - UART_UART_RTS_ACTIVE_HIGH - RTS signal is active high.
 620:Generated_Source\PSoC4/UART_UART.c ****         *
 621:Generated_Source\PSoC4/UART_UART.c ****         *******************************************************************************/
 622:Generated_Source\PSoC4/UART_UART.c ****         void UART_UartSetRtsPolarity(uint32 polarity)
 623:Generated_Source\PSoC4/UART_UART.c ****         {
 624:Generated_Source\PSoC4/UART_UART.c ****             if(0u != polarity)
 625:Generated_Source\PSoC4/UART_UART.c ****             {
 626:Generated_Source\PSoC4/UART_UART.c ****                 UART_UART_FLOW_CTRL_REG |= (uint32)  UART_UART_FLOW_CTRL_RTS_POLARITY;
 627:Generated_Source\PSoC4/UART_UART.c ****             }
 628:Generated_Source\PSoC4/UART_UART.c ****             else
 629:Generated_Source\PSoC4/UART_UART.c ****             {
 630:Generated_Source\PSoC4/UART_UART.c ****                 UART_UART_FLOW_CTRL_REG &= (uint32) ~UART_UART_FLOW_CTRL_RTS_POLARITY;
 631:Generated_Source\PSoC4/UART_UART.c ****             }
 632:Generated_Source\PSoC4/UART_UART.c ****         }
 633:Generated_Source\PSoC4/UART_UART.c **** 
 634:Generated_Source\PSoC4/UART_UART.c **** 
 635:Generated_Source\PSoC4/UART_UART.c ****         /*******************************************************************************
 636:Generated_Source\PSoC4/UART_UART.c ****         * Function Name: UART_UartSetRtsFifoLevel
 637:Generated_Source\PSoC4/UART_UART.c ****         ****************************************************************************//**
 638:Generated_Source\PSoC4/UART_UART.c ****         *
 639:Generated_Source\PSoC4/UART_UART.c ****         *  Sets level in the RX FIFO for RTS signal activation.
 640:Generated_Source\PSoC4/UART_UART.c ****         *  While the RX FIFO has fewer entries than the RX FIFO level the RTS signal
 641:Generated_Source\PSoC4/UART_UART.c ****         *  remains active, otherwise the RTS signal becomes inactive.
 642:Generated_Source\PSoC4/UART_UART.c ****         *  Only available for PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4100M / PSoC 4200M /
 643:Generated_Source\PSoC4/UART_UART.c ****         *  PSoC 4200L / PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices.
 644:Generated_Source\PSoC4/UART_UART.c ****         *
 645:Generated_Source\PSoC4/UART_UART.c ****         *  \param level: Level in the RX FIFO for RTS signal activation.
 646:Generated_Source\PSoC4/UART_UART.c ****         *   The range of valid level values is between 0 and RX FIFO depth - 1.
 647:Generated_Source\PSoC4/UART_UART.c ****         *   Setting level value to 0 disables RTS signal activation.
 648:Generated_Source\PSoC4/UART_UART.c ****         *
 649:Generated_Source\PSoC4/UART_UART.c ****         *******************************************************************************/
 650:Generated_Source\PSoC4/UART_UART.c ****         void UART_UartSetRtsFifoLevel(uint32 level)
 651:Generated_Source\PSoC4/UART_UART.c ****         {
 652:Generated_Source\PSoC4/UART_UART.c ****             uint32 uartFlowCtrl;
 653:Generated_Source\PSoC4/UART_UART.c **** 
 654:Generated_Source\PSoC4/UART_UART.c ****             uartFlowCtrl = UART_UART_FLOW_CTRL_REG;
 655:Generated_Source\PSoC4/UART_UART.c **** 
 656:Generated_Source\PSoC4/UART_UART.c ****             uartFlowCtrl &= ((uint32) ~UART_UART_FLOW_CTRL_TRIGGER_LEVEL_MASK); /* Clear level mask
 657:Generated_Source\PSoC4/UART_UART.c ****             uartFlowCtrl |= ((uint32) (UART_UART_FLOW_CTRL_TRIGGER_LEVEL_MASK & level));
 658:Generated_Source\PSoC4/UART_UART.c **** 
 659:Generated_Source\PSoC4/UART_UART.c ****             UART_UART_FLOW_CTRL_REG = uartFlowCtrl;
 660:Generated_Source\PSoC4/UART_UART.c ****         }
 661:Generated_Source\PSoC4/UART_UART.c ****     #endif /* !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1) */
 662:Generated_Source\PSoC4/UART_UART.c **** 
 663:Generated_Source\PSoC4/UART_UART.c **** #endif /* (UART_UART_RX_DIRECTION) */
 664:Generated_Source\PSoC4/UART_UART.c **** 
 665:Generated_Source\PSoC4/UART_UART.c **** 
ARM GAS  C:\Users\GIANLU~1\AppData\Local\Temp\ccsLdGBK.s 			page 20


 666:Generated_Source\PSoC4/UART_UART.c **** #if(UART_UART_TX_DIRECTION)
 667:Generated_Source\PSoC4/UART_UART.c ****     /*******************************************************************************
 668:Generated_Source\PSoC4/UART_UART.c ****     * Function Name: UART_UartPutString
 669:Generated_Source\PSoC4/UART_UART.c ****     ****************************************************************************//**
 670:Generated_Source\PSoC4/UART_UART.c ****     *
 671:Generated_Source\PSoC4/UART_UART.c ****     *  Places a NULL terminated string in the transmit buffer to be sent at the
 672:Generated_Source\PSoC4/UART_UART.c ****     *  next available bus time.
 673:Generated_Source\PSoC4/UART_UART.c ****     *  This function is blocking and waits until there is a space available to put
 674:Generated_Source\PSoC4/UART_UART.c ****     *  requested data in transmit buffer.
 675:Generated_Source\PSoC4/UART_UART.c ****     *
 676:Generated_Source\PSoC4/UART_UART.c ****     *  \param string: pointer to the null terminated string array to be placed in the
 677:Generated_Source\PSoC4/UART_UART.c ****     *   transmit buffer.
 678:Generated_Source\PSoC4/UART_UART.c ****     *
 679:Generated_Source\PSoC4/UART_UART.c ****     *******************************************************************************/
 680:Generated_Source\PSoC4/UART_UART.c ****     void UART_UartPutString(const char8 string[])
 681:Generated_Source\PSoC4/UART_UART.c ****     {
 417              		.loc 1 681 0
 418              		.cfi_startproc
 419              		@ args = 0, pretend = 0, frame = 0
 420              		@ frame_needed = 0, uses_anonymous_args = 0
 421              	.LVL27:
 422 0000 70B5     		push	{r4, r5, r6, lr}
 423              		.cfi_def_cfa_offset 16
 424              		.cfi_offset 4, -16
 425              		.cfi_offset 5, -12
 426              		.cfi_offset 6, -8
 427              		.cfi_offset 14, -4
 428 0002 0500     		movs	r5, r0
 429              	.LVL28:
 682:Generated_Source\PSoC4/UART_UART.c ****         uint32 bufIndex;
 683:Generated_Source\PSoC4/UART_UART.c **** 
 684:Generated_Source\PSoC4/UART_UART.c ****         bufIndex = 0u;
 430              		.loc 1 684 0
 431 0004 0024     		movs	r4, #0
 685:Generated_Source\PSoC4/UART_UART.c **** 
 686:Generated_Source\PSoC4/UART_UART.c ****         /* Blocks the control flow until all data has been sent */
 687:Generated_Source\PSoC4/UART_UART.c ****         while(string[bufIndex] != ((char8) 0))
 432              		.loc 1 687 0
 433 0006 02E0     		b	.L28
 434              	.LVL29:
 435              	.L29:
 688:Generated_Source\PSoC4/UART_UART.c ****         {
 689:Generated_Source\PSoC4/UART_UART.c ****             UART_UartPutChar((uint32) string[bufIndex]);
 436              		.loc 1 689 0
 437 0008 FFF7FEFF 		bl	UART_SpiUartWriteTxData
 438              	.LVL30:
 690:Generated_Source\PSoC4/UART_UART.c ****             bufIndex++;
 439              		.loc 1 690 0
 440 000c 0134     		adds	r4, r4, #1
 441              	.LVL31:
 442              	.L28:
 687:Generated_Source\PSoC4/UART_UART.c ****         {
 443              		.loc 1 687 0
 444 000e 285D     		ldrb	r0, [r5, r4]
 445 0010 0028     		cmp	r0, #0
 446 0012 F9D1     		bne	.L29
 691:Generated_Source\PSoC4/UART_UART.c ****         }
ARM GAS  C:\Users\GIANLU~1\AppData\Local\Temp\ccsLdGBK.s 			page 21


 692:Generated_Source\PSoC4/UART_UART.c ****     }
 447              		.loc 1 692 0
 448              		@ sp needed
 449              	.LVL32:
 450              	.LVL33:
 451 0014 70BD     		pop	{r4, r5, r6, pc}
 452              		.cfi_endproc
 453              	.LFE7:
 454              		.size	UART_UartPutString, .-UART_UartPutString
 455 0016 C046     		.section	.text.UART_UartPutCRLF,"ax",%progbits
 456              		.align	2
 457              		.global	UART_UartPutCRLF
 458              		.code	16
 459              		.thumb_func
 460              		.type	UART_UartPutCRLF, %function
 461              	UART_UartPutCRLF:
 462              	.LFB8:
 693:Generated_Source\PSoC4/UART_UART.c **** 
 694:Generated_Source\PSoC4/UART_UART.c **** 
 695:Generated_Source\PSoC4/UART_UART.c ****     /*******************************************************************************
 696:Generated_Source\PSoC4/UART_UART.c ****     * Function Name: UART_UartPutCRLF
 697:Generated_Source\PSoC4/UART_UART.c ****     ****************************************************************************//**
 698:Generated_Source\PSoC4/UART_UART.c ****     *
 699:Generated_Source\PSoC4/UART_UART.c ****     *  Places byte of data followed by a carriage return (0x0D) and line feed
 700:Generated_Source\PSoC4/UART_UART.c ****     *  (0x0A) in the transmit buffer.
 701:Generated_Source\PSoC4/UART_UART.c ****     *  This function is blocking and waits until there is a space available to put
 702:Generated_Source\PSoC4/UART_UART.c ****     *  all requested data in transmit buffer.
 703:Generated_Source\PSoC4/UART_UART.c ****     *
 704:Generated_Source\PSoC4/UART_UART.c ****     *  \param txDataByte: the data to be transmitted.
 705:Generated_Source\PSoC4/UART_UART.c ****     *
 706:Generated_Source\PSoC4/UART_UART.c ****     *******************************************************************************/
 707:Generated_Source\PSoC4/UART_UART.c ****     void UART_UartPutCRLF(uint32 txDataByte)
 708:Generated_Source\PSoC4/UART_UART.c ****     {
 463              		.loc 1 708 0
 464              		.cfi_startproc
 465              		@ args = 0, pretend = 0, frame = 0
 466              		@ frame_needed = 0, uses_anonymous_args = 0
 467              	.LVL34:
 468 0000 10B5     		push	{r4, lr}
 469              		.cfi_def_cfa_offset 8
 470              		.cfi_offset 4, -8
 471              		.cfi_offset 14, -4
 709:Generated_Source\PSoC4/UART_UART.c ****         UART_UartPutChar(txDataByte);  /* Blocks control flow until all data has been sent */
 472              		.loc 1 709 0
 473 0002 FFF7FEFF 		bl	UART_SpiUartWriteTxData
 474              	.LVL35:
 710:Generated_Source\PSoC4/UART_UART.c ****         UART_UartPutChar(0x0Du);       /* Blocks control flow until all data has been sent */
 475              		.loc 1 710 0
 476 0006 0D20     		movs	r0, #13
 477 0008 FFF7FEFF 		bl	UART_SpiUartWriteTxData
 478              	.LVL36:
 711:Generated_Source\PSoC4/UART_UART.c ****         UART_UartPutChar(0x0Au);       /* Blocks control flow until all data has been sent */
 479              		.loc 1 711 0
 480 000c 0A20     		movs	r0, #10
 481 000e FFF7FEFF 		bl	UART_SpiUartWriteTxData
 482              	.LVL37:
 712:Generated_Source\PSoC4/UART_UART.c ****     }
ARM GAS  C:\Users\GIANLU~1\AppData\Local\Temp\ccsLdGBK.s 			page 22


 483              		.loc 1 712 0
 484              		@ sp needed
 485 0012 10BD     		pop	{r4, pc}
 486              		.cfi_endproc
 487              	.LFE8:
 488              		.size	UART_UartPutCRLF, .-UART_UartPutCRLF
 489              		.section	.text.UART_UartSendBreakBlocking,"ax",%progbits
 490              		.align	2
 491              		.global	UART_UartSendBreakBlocking
 492              		.code	16
 493              		.thumb_func
 494              		.type	UART_UartSendBreakBlocking, %function
 495              	UART_UartSendBreakBlocking:
 496              	.LFB9:
 713:Generated_Source\PSoC4/UART_UART.c **** 
 714:Generated_Source\PSoC4/UART_UART.c **** 
 715:Generated_Source\PSoC4/UART_UART.c ****     #if !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1)
 716:Generated_Source\PSoC4/UART_UART.c ****         /*******************************************************************************
 717:Generated_Source\PSoC4/UART_UART.c ****         * Function Name: UARTSCB_UartEnableCts
 718:Generated_Source\PSoC4/UART_UART.c ****         ****************************************************************************//**
 719:Generated_Source\PSoC4/UART_UART.c ****         *
 720:Generated_Source\PSoC4/UART_UART.c ****         *  Enables usage of CTS input signal by the UART transmitter.
 721:Generated_Source\PSoC4/UART_UART.c ****         *  Only available for PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4100M / PSoC 4200M /
 722:Generated_Source\PSoC4/UART_UART.c ****         *  PSoC 4200L / PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices.
 723:Generated_Source\PSoC4/UART_UART.c ****         *
 724:Generated_Source\PSoC4/UART_UART.c ****         *******************************************************************************/
 725:Generated_Source\PSoC4/UART_UART.c ****         void UART_UartEnableCts(void)
 726:Generated_Source\PSoC4/UART_UART.c ****         {
 727:Generated_Source\PSoC4/UART_UART.c ****             UART_UART_FLOW_CTRL_REG |= (uint32)  UART_UART_FLOW_CTRL_CTS_ENABLE;
 728:Generated_Source\PSoC4/UART_UART.c ****         }
 729:Generated_Source\PSoC4/UART_UART.c **** 
 730:Generated_Source\PSoC4/UART_UART.c **** 
 731:Generated_Source\PSoC4/UART_UART.c ****         /*******************************************************************************
 732:Generated_Source\PSoC4/UART_UART.c ****         * Function Name: UART_UartDisableCts
 733:Generated_Source\PSoC4/UART_UART.c ****         ****************************************************************************//**
 734:Generated_Source\PSoC4/UART_UART.c ****         *
 735:Generated_Source\PSoC4/UART_UART.c ****         *  Disables usage of CTS input signal by the UART transmitter.
 736:Generated_Source\PSoC4/UART_UART.c ****         *  Only available for PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4100M / PSoC 4200M /
 737:Generated_Source\PSoC4/UART_UART.c ****         *  PSoC 4200L / PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices.
 738:Generated_Source\PSoC4/UART_UART.c ****         *
 739:Generated_Source\PSoC4/UART_UART.c ****         *******************************************************************************/
 740:Generated_Source\PSoC4/UART_UART.c ****         void UART_UartDisableCts(void)
 741:Generated_Source\PSoC4/UART_UART.c ****         {
 742:Generated_Source\PSoC4/UART_UART.c ****             UART_UART_FLOW_CTRL_REG &= (uint32) ~UART_UART_FLOW_CTRL_CTS_ENABLE;
 743:Generated_Source\PSoC4/UART_UART.c ****         }
 744:Generated_Source\PSoC4/UART_UART.c **** 
 745:Generated_Source\PSoC4/UART_UART.c **** 
 746:Generated_Source\PSoC4/UART_UART.c ****         /*******************************************************************************
 747:Generated_Source\PSoC4/UART_UART.c ****         * Function Name: UART_UartSetCtsPolarity
 748:Generated_Source\PSoC4/UART_UART.c ****         ****************************************************************************//**
 749:Generated_Source\PSoC4/UART_UART.c ****         *
 750:Generated_Source\PSoC4/UART_UART.c ****         *  Sets active polarity of CTS input signal.
 751:Generated_Source\PSoC4/UART_UART.c ****         *  Only available for PSoC 4100 BLE / PSoC 4200 BLE / PSoC 4100M / PSoC 4200M /
 752:Generated_Source\PSoC4/UART_UART.c ****         *  PSoC 4200L / PSoC 4000S / PSoC 4100S / PSoC Analog Coprocessor devices.
 753:Generated_Source\PSoC4/UART_UART.c ****         *
 754:Generated_Source\PSoC4/UART_UART.c ****         * \param
 755:Generated_Source\PSoC4/UART_UART.c ****         * polarity: Active polarity of CTS output signal.
ARM GAS  C:\Users\GIANLU~1\AppData\Local\Temp\ccsLdGBK.s 			page 23


 756:Generated_Source\PSoC4/UART_UART.c ****         *   - UART_UART_CTS_ACTIVE_LOW  - CTS signal is active low.
 757:Generated_Source\PSoC4/UART_UART.c ****         *   - UART_UART_CTS_ACTIVE_HIGH - CTS signal is active high.
 758:Generated_Source\PSoC4/UART_UART.c ****         *
 759:Generated_Source\PSoC4/UART_UART.c ****         *******************************************************************************/
 760:Generated_Source\PSoC4/UART_UART.c ****         void UART_UartSetCtsPolarity(uint32 polarity)
 761:Generated_Source\PSoC4/UART_UART.c ****         {
 762:Generated_Source\PSoC4/UART_UART.c ****             if (0u != polarity)
 763:Generated_Source\PSoC4/UART_UART.c ****             {
 764:Generated_Source\PSoC4/UART_UART.c ****                 UART_UART_FLOW_CTRL_REG |= (uint32)  UART_UART_FLOW_CTRL_CTS_POLARITY;
 765:Generated_Source\PSoC4/UART_UART.c ****             }
 766:Generated_Source\PSoC4/UART_UART.c ****             else
 767:Generated_Source\PSoC4/UART_UART.c ****             {
 768:Generated_Source\PSoC4/UART_UART.c ****                 UART_UART_FLOW_CTRL_REG &= (uint32) ~UART_UART_FLOW_CTRL_CTS_POLARITY;
 769:Generated_Source\PSoC4/UART_UART.c ****             }
 770:Generated_Source\PSoC4/UART_UART.c ****         }
 771:Generated_Source\PSoC4/UART_UART.c ****     #endif /* !(UART_CY_SCBIP_V0 || UART_CY_SCBIP_V1) */
 772:Generated_Source\PSoC4/UART_UART.c **** 
 773:Generated_Source\PSoC4/UART_UART.c **** 
 774:Generated_Source\PSoC4/UART_UART.c ****     /*******************************************************************************
 775:Generated_Source\PSoC4/UART_UART.c ****     * Function Name: UART_UartSendBreakBlocking
 776:Generated_Source\PSoC4/UART_UART.c ****     ****************************************************************************//**
 777:Generated_Source\PSoC4/UART_UART.c ****     *
 778:Generated_Source\PSoC4/UART_UART.c ****     * Sends a break condition (logic low) of specified width on UART TX line.
 779:Generated_Source\PSoC4/UART_UART.c ****     * Blocks until break is completed. Only call this function when UART TX FIFO
 780:Generated_Source\PSoC4/UART_UART.c ****     * and shifter are empty.
 781:Generated_Source\PSoC4/UART_UART.c ****     *
 782:Generated_Source\PSoC4/UART_UART.c ****     * \param breakWidth
 783:Generated_Source\PSoC4/UART_UART.c ****     * Width of break condition. Valid range is 4 to 16 bits.
 784:Generated_Source\PSoC4/UART_UART.c ****     *
 785:Generated_Source\PSoC4/UART_UART.c ****     * \note
 786:Generated_Source\PSoC4/UART_UART.c ****     * Before sending break all UART TX interrupt sources are disabled. The state
 787:Generated_Source\PSoC4/UART_UART.c ****     * of UART TX interrupt sources is restored before function returns.
 788:Generated_Source\PSoC4/UART_UART.c ****     *
 789:Generated_Source\PSoC4/UART_UART.c ****     * \sideeffect
 790:Generated_Source\PSoC4/UART_UART.c ****     * If this function is called while there is data in the TX FIFO or shifter that
 791:Generated_Source\PSoC4/UART_UART.c ****     * data will be shifted out in packets the size of breakWidth.
 792:Generated_Source\PSoC4/UART_UART.c ****     *
 793:Generated_Source\PSoC4/UART_UART.c ****     *******************************************************************************/
 794:Generated_Source\PSoC4/UART_UART.c ****     void UART_UartSendBreakBlocking(uint32 breakWidth)
 795:Generated_Source\PSoC4/UART_UART.c ****     {
 497              		.loc 1 795 0
 498              		.cfi_startproc
 499              		@ args = 0, pretend = 0, frame = 0
 500              		@ frame_needed = 0, uses_anonymous_args = 0
 501              	.LVL38:
 502 0000 70B5     		push	{r4, r5, r6, lr}
 503              		.cfi_def_cfa_offset 16
 504              		.cfi_offset 4, -16
 505              		.cfi_offset 5, -12
 506              		.cfi_offset 6, -8
 507              		.cfi_offset 14, -4
 508 0002 0300     		movs	r3, r0
 796:Generated_Source\PSoC4/UART_UART.c ****         uint32 txCtrlReg;
 797:Generated_Source\PSoC4/UART_UART.c ****         uint32 txIntrReg;
 798:Generated_Source\PSoC4/UART_UART.c **** 
 799:Generated_Source\PSoC4/UART_UART.c ****         /* Disable all UART TX interrupt source and clear UART TX Done history */
 800:Generated_Source\PSoC4/UART_UART.c ****         txIntrReg = UART_GetTxInterruptMode();
ARM GAS  C:\Users\GIANLU~1\AppData\Local\Temp\ccsLdGBK.s 			page 24


 509              		.loc 1 800 0
 510 0004 0F4A     		ldr	r2, .L33
 511 0006 1568     		ldr	r5, [r2]
 512              	.LVL39:
 801:Generated_Source\PSoC4/UART_UART.c ****         UART_SetTxInterruptMode(0u);
 513              		.loc 1 801 0
 514 0008 0024     		movs	r4, #0
 515 000a 1460     		str	r4, [r2]
 802:Generated_Source\PSoC4/UART_UART.c ****         UART_ClearTxInterruptSource(UART_INTR_TX_UART_DONE);
 516              		.loc 1 802 0
 517 000c 8021     		movs	r1, #128
 518 000e 8900     		lsls	r1, r1, #2
 519 0010 0D4A     		ldr	r2, .L33+4
 520 0012 1160     		str	r1, [r2]
 803:Generated_Source\PSoC4/UART_UART.c **** 
 804:Generated_Source\PSoC4/UART_UART.c ****         /* Store TX CTRL configuration */
 805:Generated_Source\PSoC4/UART_UART.c ****         txCtrlReg = UART_TX_CTRL_REG;
 521              		.loc 1 805 0
 522 0014 0D4A     		ldr	r2, .L33+8
 523 0016 1668     		ldr	r6, [r2]
 524              	.LVL40:
 806:Generated_Source\PSoC4/UART_UART.c **** 
 807:Generated_Source\PSoC4/UART_UART.c ****         /* Set break width */
 808:Generated_Source\PSoC4/UART_UART.c ****         UART_TX_CTRL_REG = (UART_TX_CTRL_REG & (uint32) ~UART_TX_CTRL_DATA_WIDTH_MASK) |
 525              		.loc 1 808 0
 526 0018 1168     		ldr	r1, [r2]
 527 001a 0F20     		movs	r0, #15
 528              	.LVL41:
 529 001c 8143     		bics	r1, r0
 809:Generated_Source\PSoC4/UART_UART.c ****                                         UART_GET_TX_CTRL_DATA_WIDTH(breakWidth);
 530              		.loc 1 809 0
 531 001e 013B     		subs	r3, r3, #1
 532              	.LVL42:
 533 0020 1840     		ands	r0, r3
 808:Generated_Source\PSoC4/UART_UART.c ****                                         UART_GET_TX_CTRL_DATA_WIDTH(breakWidth);
 534              		.loc 1 808 0
 535 0022 0843     		orrs	r0, r1
 536 0024 1060     		str	r0, [r2]
 810:Generated_Source\PSoC4/UART_UART.c **** 
 811:Generated_Source\PSoC4/UART_UART.c ****         /* Generate break */
 812:Generated_Source\PSoC4/UART_UART.c ****         UART_TX_FIFO_WR_REG = 0u;
 537              		.loc 1 812 0
 538 0026 0A4B     		ldr	r3, .L33+12
 539              	.LVL43:
 540 0028 1C60     		str	r4, [r3]
 541              	.L32:
 813:Generated_Source\PSoC4/UART_UART.c **** 
 814:Generated_Source\PSoC4/UART_UART.c ****         /* Wait for break completion */
 815:Generated_Source\PSoC4/UART_UART.c ****         while (0u == (UART_GetTxInterruptSource() & UART_INTR_TX_UART_DONE))
 542              		.loc 1 815 0 discriminator 1
 543 002a 074B     		ldr	r3, .L33+4
 544 002c 1B68     		ldr	r3, [r3]
 545 002e 9B05     		lsls	r3, r3, #22
 546 0030 FBD5     		bpl	.L32
 816:Generated_Source\PSoC4/UART_UART.c ****         {
 817:Generated_Source\PSoC4/UART_UART.c ****         }
 818:Generated_Source\PSoC4/UART_UART.c **** 
ARM GAS  C:\Users\GIANLU~1\AppData\Local\Temp\ccsLdGBK.s 			page 25


 819:Generated_Source\PSoC4/UART_UART.c ****         /* Clear all UART TX interrupt sources to  */
 820:Generated_Source\PSoC4/UART_UART.c ****         UART_ClearTxInterruptSource(UART_INTR_TX_ALL);
 547              		.loc 1 820 0
 548 0032 084A     		ldr	r2, .L33+16
 549 0034 044B     		ldr	r3, .L33+4
 550 0036 1A60     		str	r2, [r3]
 821:Generated_Source\PSoC4/UART_UART.c **** 
 822:Generated_Source\PSoC4/UART_UART.c ****         /* Restore TX interrupt sources and data width */
 823:Generated_Source\PSoC4/UART_UART.c ****         UART_TX_CTRL_REG = txCtrlReg;
 551              		.loc 1 823 0
 552 0038 044B     		ldr	r3, .L33+8
 553 003a 1E60     		str	r6, [r3]
 824:Generated_Source\PSoC4/UART_UART.c ****         UART_SetTxInterruptMode(txIntrReg);
 554              		.loc 1 824 0
 555 003c 014B     		ldr	r3, .L33
 556 003e 1D60     		str	r5, [r3]
 825:Generated_Source\PSoC4/UART_UART.c ****     }
 557              		.loc 1 825 0
 558              		@ sp needed
 559              	.LVL44:
 560              	.LVL45:
 561 0040 70BD     		pop	{r4, r5, r6, pc}
 562              	.L34:
 563 0042 C046     		.align	2
 564              	.L33:
 565 0044 880F0740 		.word	1074204552
 566 0048 800F0740 		.word	1074204544
 567 004c 00020740 		.word	1074201088
 568 0050 40020740 		.word	1074201152
 569 0054 F3070000 		.word	2035
 570              		.cfi_endproc
 571              	.LFE9:
 572              		.size	UART_UartSendBreakBlocking, .-UART_UartSendBreakBlocking
 573              		.text
 574              	.Letext0:
 575              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 576              		.file 3 "Generated_Source\\PSoC4/CyLib.h"
 577              		.file 4 "Generated_Source\\PSoC4\\UART_SPI_UART.h"
 578              		.file 5 "Generated_Source\\PSoC4\\UART_PVT.h"
 579              		.section	.debug_info,"",%progbits
 580              	.Ldebug_info0:
 581 0000 78030000 		.4byte	0x378
 582 0004 0400     		.2byte	0x4
 583 0006 00000000 		.4byte	.Ldebug_abbrev0
 584 000a 04       		.byte	0x4
 585 000b 01       		.uleb128 0x1
 586 000c 21020000 		.4byte	.LASF46
 587 0010 0C       		.byte	0xc
 588 0011 14000000 		.4byte	.LASF47
 589 0015 55010000 		.4byte	.LASF48
 590 0019 00000000 		.4byte	.Ldebug_ranges0+0
 591 001d 00000000 		.4byte	0
 592 0021 00000000 		.4byte	.Ldebug_line0
 593 0025 02       		.uleb128 0x2
 594 0026 01       		.byte	0x1
 595 0027 06       		.byte	0x6
 596 0028 37030000 		.4byte	.LASF0
ARM GAS  C:\Users\GIANLU~1\AppData\Local\Temp\ccsLdGBK.s 			page 26


 597 002c 02       		.uleb128 0x2
 598 002d 01       		.byte	0x1
 599 002e 08       		.byte	0x8
 600 002f D2000000 		.4byte	.LASF1
 601 0033 02       		.uleb128 0x2
 602 0034 02       		.byte	0x2
 603 0035 05       		.byte	0x5
 604 0036 E8020000 		.4byte	.LASF2
 605 003a 02       		.uleb128 0x2
 606 003b 02       		.byte	0x2
 607 003c 07       		.byte	0x7
 608 003d 70000000 		.4byte	.LASF3
 609 0041 02       		.uleb128 0x2
 610 0042 04       		.byte	0x4
 611 0043 05       		.byte	0x5
 612 0044 09030000 		.4byte	.LASF4
 613 0048 02       		.uleb128 0x2
 614 0049 04       		.byte	0x4
 615 004a 07       		.byte	0x7
 616 004b FA000000 		.4byte	.LASF5
 617 004f 02       		.uleb128 0x2
 618 0050 08       		.byte	0x8
 619 0051 05       		.byte	0x5
 620 0052 00000000 		.4byte	.LASF6
 621 0056 02       		.uleb128 0x2
 622 0057 08       		.byte	0x8
 623 0058 07       		.byte	0x7
 624 0059 F0010000 		.4byte	.LASF7
 625 005d 03       		.uleb128 0x3
 626 005e 04       		.byte	0x4
 627 005f 05       		.byte	0x5
 628 0060 696E7400 		.ascii	"int\000"
 629 0064 02       		.uleb128 0x2
 630 0065 04       		.byte	0x4
 631 0066 07       		.byte	0x7
 632 0067 BC010000 		.4byte	.LASF8
 633 006b 04       		.uleb128 0x4
 634 006c 1A010000 		.4byte	.LASF9
 635 0070 02       		.byte	0x2
 636 0071 FC01     		.2byte	0x1fc
 637 0073 2C000000 		.4byte	0x2c
 638 0077 04       		.uleb128 0x4
 639 0078 AE010000 		.4byte	.LASF10
 640 007c 02       		.byte	0x2
 641 007d FD01     		.2byte	0x1fd
 642 007f 3A000000 		.4byte	0x3a
 643 0083 04       		.uleb128 0x4
 644 0084 B5010000 		.4byte	.LASF11
 645 0088 02       		.byte	0x2
 646 0089 FE01     		.2byte	0x1fe
 647 008b 48000000 		.4byte	0x48
 648 008f 02       		.uleb128 0x2
 649 0090 04       		.byte	0x4
 650 0091 04       		.byte	0x4
 651 0092 31030000 		.4byte	.LASF12
 652 0096 02       		.uleb128 0x2
 653 0097 08       		.byte	0x8
ARM GAS  C:\Users\GIANLU~1\AppData\Local\Temp\ccsLdGBK.s 			page 27


 654 0098 04       		.byte	0x4
 655 0099 91010000 		.4byte	.LASF13
 656 009d 04       		.uleb128 0x4
 657 009e E0000000 		.4byte	.LASF14
 658 00a2 02       		.byte	0x2
 659 00a3 0D02     		.2byte	0x20d
 660 00a5 A9000000 		.4byte	0xa9
 661 00a9 02       		.uleb128 0x2
 662 00aa 01       		.byte	0x1
 663 00ab 08       		.byte	0x8
 664 00ac 83000000 		.4byte	.LASF15
 665 00b0 04       		.uleb128 0x4
 666 00b1 0E000000 		.4byte	.LASF16
 667 00b5 02       		.byte	0x2
 668 00b6 A802     		.2byte	0x2a8
 669 00b8 BC000000 		.4byte	0xbc
 670 00bc 05       		.uleb128 0x5
 671 00bd 83000000 		.4byte	0x83
 672 00c1 02       		.uleb128 0x2
 673 00c2 08       		.byte	0x8
 674 00c3 04       		.byte	0x4
 675 00c4 25030000 		.4byte	.LASF17
 676 00c8 02       		.uleb128 0x2
 677 00c9 04       		.byte	0x4
 678 00ca 07       		.byte	0x7
 679 00cb AF020000 		.4byte	.LASF18
 680 00cf 06       		.uleb128 0x6
 681 00d0 C9010000 		.4byte	.LASF21
 682 00d4 01       		.byte	0x1
 683 00d5 F7       		.byte	0xf7
 684 00d6 00000000 		.4byte	.LFB0
 685 00da C0000000 		.4byte	.LFE0-.LFB0
 686 00de 01       		.uleb128 0x1
 687 00df 9C       		.byte	0x9c
 688 00e0 1F010000 		.4byte	0x11f
 689 00e4 07       		.uleb128 0x7
 690 00e5 3A000000 		.4byte	.LVL0
 691 00e9 36030000 		.4byte	0x336
 692 00ed F7000000 		.4byte	0xf7
 693 00f1 08       		.uleb128 0x8
 694 00f2 01       		.uleb128 0x1
 695 00f3 50       		.byte	0x50
 696 00f4 01       		.uleb128 0x1
 697 00f5 3B       		.byte	0x3b
 698 00f6 00       		.byte	0
 699 00f7 07       		.uleb128 0x7
 700 00f8 42000000 		.4byte	.LVL1
 701 00fc 41030000 		.4byte	0x341
 702 0100 0F010000 		.4byte	0x10f
 703 0104 08       		.uleb128 0x8
 704 0105 01       		.uleb128 0x1
 705 0106 50       		.byte	0x50
 706 0107 01       		.uleb128 0x1
 707 0108 3B       		.byte	0x3b
 708 0109 08       		.uleb128 0x8
 709 010a 01       		.uleb128 0x1
 710 010b 51       		.byte	0x51
ARM GAS  C:\Users\GIANLU~1\AppData\Local\Temp\ccsLdGBK.s 			page 28


 711 010c 01       		.uleb128 0x1
 712 010d 33       		.byte	0x33
 713 010e 00       		.byte	0
 714 010f 09       		.uleb128 0x9
 715 0110 4A000000 		.4byte	.LVL2
 716 0114 4C030000 		.4byte	0x34c
 717 0118 08       		.uleb128 0x8
 718 0119 01       		.uleb128 0x1
 719 011a 50       		.byte	0x50
 720 011b 01       		.uleb128 0x1
 721 011c 3B       		.byte	0x3b
 722 011d 00       		.byte	0
 723 011e 00       		.byte	0
 724 011f 0A       		.uleb128 0xa
 725 0120 E6000000 		.4byte	.LASF19
 726 0124 01       		.byte	0x1
 727 0125 3D01     		.2byte	0x13d
 728 0127 00000000 		.4byte	.LFB1
 729 012b 24000000 		.4byte	.LFE1-.LFB1
 730 012f 01       		.uleb128 0x1
 731 0130 9C       		.byte	0x9c
 732 0131 0A       		.uleb128 0xa
 733 0132 0C010000 		.4byte	.LASF20
 734 0136 01       		.byte	0x1
 735 0137 7101     		.2byte	0x171
 736 0139 00000000 		.4byte	.LFB2
 737 013d 28000000 		.4byte	.LFE2-.LFB2
 738 0141 01       		.uleb128 0x1
 739 0142 9C       		.byte	0x9c
 740 0143 0B       		.uleb128 0xb
 741 0144 98010000 		.4byte	.LASF22
 742 0148 01       		.byte	0x1
 743 0149 B101     		.2byte	0x1b1
 744 014b 00000000 		.4byte	.LFB3
 745 014f 14000000 		.4byte	.LFE3-.LFB3
 746 0153 01       		.uleb128 0x1
 747 0154 9C       		.byte	0x9c
 748 0155 7A010000 		.4byte	0x17a
 749 0159 0C       		.uleb128 0xc
 750 015a E8010000 		.4byte	.LASF24
 751 015e 01       		.byte	0x1
 752 015f B101     		.2byte	0x1b1
 753 0161 83000000 		.4byte	0x83
 754 0165 00000000 		.4byte	.LLST0
 755 0169 0D       		.uleb128 0xd
 756 016a 1C030000 		.4byte	.LASF26
 757 016e 01       		.byte	0x1
 758 016f B301     		.2byte	0x1b3
 759 0171 83000000 		.4byte	0x83
 760 0175 21000000 		.4byte	.LLST1
 761 0179 00       		.byte	0
 762 017a 0B       		.uleb128 0xb
 763 017b 47000000 		.4byte	.LASF23
 764 017f 01       		.byte	0x1
 765 0180 CA01     		.2byte	0x1ca
 766 0182 00000000 		.4byte	.LFB4
 767 0186 18000000 		.4byte	.LFE4-.LFB4
ARM GAS  C:\Users\GIANLU~1\AppData\Local\Temp\ccsLdGBK.s 			page 29


 768 018a 01       		.uleb128 0x1
 769 018b 9C       		.byte	0x9c
 770 018c B1010000 		.4byte	0x1b1
 771 0190 0C       		.uleb128 0xc
 772 0191 49010000 		.4byte	.LASF25
 773 0195 01       		.byte	0x1
 774 0196 CA01     		.2byte	0x1ca
 775 0198 83000000 		.4byte	0x83
 776 019c 3F000000 		.4byte	.LLST2
 777 01a0 0D       		.uleb128 0xd
 778 01a1 1C030000 		.4byte	.LASF26
 779 01a5 01       		.byte	0x1
 780 01a6 CC01     		.2byte	0x1cc
 781 01a8 83000000 		.4byte	0x83
 782 01ac 60000000 		.4byte	.LLST3
 783 01b0 00       		.byte	0
 784 01b1 0E       		.uleb128 0xe
 785 01b2 D7010000 		.4byte	.LASF28
 786 01b6 01       		.byte	0x1
 787 01b7 F201     		.2byte	0x1f2
 788 01b9 83000000 		.4byte	0x83
 789 01bd 00000000 		.4byte	.LFB5
 790 01c1 2C000000 		.4byte	.LFE5-.LFB5
 791 01c5 01       		.uleb128 0x1
 792 01c6 9C       		.byte	0x9c
 793 01c7 EE010000 		.4byte	0x1ee
 794 01cb 0D       		.uleb128 0xd
 795 01cc 42010000 		.4byte	.LASF27
 796 01d0 01       		.byte	0x1
 797 01d1 F401     		.2byte	0x1f4
 798 01d3 83000000 		.4byte	0x83
 799 01d7 89000000 		.4byte	.LLST4
 800 01db 0F       		.uleb128 0xf
 801 01dc 06000000 		.4byte	.LVL14
 802 01e0 57030000 		.4byte	0x357
 803 01e4 0F       		.uleb128 0xf
 804 01e5 0E000000 		.4byte	.LVL15
 805 01e9 63030000 		.4byte	0x363
 806 01ed 00       		.byte	0
 807 01ee 0E       		.uleb128 0xe
 808 01ef 31010000 		.4byte	.LASF29
 809 01f3 01       		.byte	0x1
 810 01f4 2402     		.2byte	0x224
 811 01f6 83000000 		.4byte	0x83
 812 01fa 00000000 		.4byte	.LFB6
 813 01fe 34000000 		.4byte	.LFE6-.LFB6
 814 0202 01       		.uleb128 0x1
 815 0203 9C       		.byte	0x9c
 816 0204 3B020000 		.4byte	0x23b
 817 0208 0D       		.uleb128 0xd
 818 0209 42010000 		.4byte	.LASF27
 819 020d 01       		.byte	0x1
 820 020e 2602     		.2byte	0x226
 821 0210 83000000 		.4byte	0x83
 822 0214 D6000000 		.4byte	.LLST5
 823 0218 0D       		.uleb128 0xd
 824 0219 12030000 		.4byte	.LASF30
ARM GAS  C:\Users\GIANLU~1\AppData\Local\Temp\ccsLdGBK.s 			page 30


 825 021d 01       		.byte	0x1
 826 021e 2702     		.2byte	0x227
 827 0220 83000000 		.4byte	0x83
 828 0224 F4000000 		.4byte	.LLST6
 829 0228 0F       		.uleb128 0xf
 830 0229 06000000 		.4byte	.LVL20
 831 022d 57030000 		.4byte	0x357
 832 0231 0F       		.uleb128 0xf
 833 0232 0E000000 		.4byte	.LVL21
 834 0236 63030000 		.4byte	0x363
 835 023a 00       		.byte	0
 836 023b 0B       		.uleb128 0xb
 837 023c 8F000000 		.4byte	.LASF31
 838 0240 01       		.byte	0x1
 839 0241 A802     		.2byte	0x2a8
 840 0243 00000000 		.4byte	.LFB7
 841 0247 16000000 		.4byte	.LFE7-.LFB7
 842 024b 01       		.uleb128 0x1
 843 024c 9C       		.byte	0x9c
 844 024d 7B020000 		.4byte	0x27b
 845 0251 0C       		.uleb128 0xc
 846 0252 88000000 		.4byte	.LASF32
 847 0256 01       		.byte	0x1
 848 0257 A802     		.2byte	0x2a8
 849 0259 7B020000 		.4byte	0x27b
 850 025d 0D010000 		.4byte	.LLST7
 851 0261 0D       		.uleb128 0xd
 852 0262 18020000 		.4byte	.LASF33
 853 0266 01       		.byte	0x1
 854 0267 AA02     		.2byte	0x2aa
 855 0269 83000000 		.4byte	0x83
 856 026d 39010000 		.4byte	.LLST8
 857 0271 0F       		.uleb128 0xf
 858 0272 0C000000 		.4byte	.LVL30
 859 0276 6F030000 		.4byte	0x36f
 860 027a 00       		.byte	0
 861 027b 10       		.uleb128 0x10
 862 027c 04       		.byte	0x4
 863 027d 81020000 		.4byte	0x281
 864 0281 11       		.uleb128 0x11
 865 0282 9D000000 		.4byte	0x9d
 866 0286 0B       		.uleb128 0xb
 867 0287 20010000 		.4byte	.LASF34
 868 028b 01       		.byte	0x1
 869 028c C302     		.2byte	0x2c3
 870 028e 00000000 		.4byte	.LFB8
 871 0292 14000000 		.4byte	.LFE8-.LFB8
 872 0296 01       		.uleb128 0x1
 873 0297 9C       		.byte	0x9c
 874 0298 E4020000 		.4byte	0x2e4
 875 029c 0C       		.uleb128 0xc
 876 029d B8020000 		.4byte	.LASF35
 877 02a1 01       		.byte	0x1
 878 02a2 C302     		.2byte	0x2c3
 879 02a4 83000000 		.4byte	0x83
 880 02a8 58010000 		.4byte	.LLST9
 881 02ac 07       		.uleb128 0x7
ARM GAS  C:\Users\GIANLU~1\AppData\Local\Temp\ccsLdGBK.s 			page 31


 882 02ad 06000000 		.4byte	.LVL35
 883 02b1 6F030000 		.4byte	0x36f
 884 02b5 C1020000 		.4byte	0x2c1
 885 02b9 08       		.uleb128 0x8
 886 02ba 01       		.uleb128 0x1
 887 02bb 50       		.byte	0x50
 888 02bc 03       		.uleb128 0x3
 889 02bd F3       		.byte	0xf3
 890 02be 01       		.uleb128 0x1
 891 02bf 50       		.byte	0x50
 892 02c0 00       		.byte	0
 893 02c1 07       		.uleb128 0x7
 894 02c2 0C000000 		.4byte	.LVL36
 895 02c6 6F030000 		.4byte	0x36f
 896 02ca D4020000 		.4byte	0x2d4
 897 02ce 08       		.uleb128 0x8
 898 02cf 01       		.uleb128 0x1
 899 02d0 50       		.byte	0x50
 900 02d1 01       		.uleb128 0x1
 901 02d2 3D       		.byte	0x3d
 902 02d3 00       		.byte	0
 903 02d4 09       		.uleb128 0x9
 904 02d5 12000000 		.4byte	.LVL37
 905 02d9 6F030000 		.4byte	0x36f
 906 02dd 08       		.uleb128 0x8
 907 02de 01       		.uleb128 0x1
 908 02df 50       		.byte	0x50
 909 02e0 01       		.uleb128 0x1
 910 02e1 3A       		.byte	0x3a
 911 02e2 00       		.byte	0
 912 02e3 00       		.byte	0
 913 02e4 0B       		.uleb128 0xb
 914 02e5 AD000000 		.4byte	.LASF36
 915 02e9 01       		.byte	0x1
 916 02ea 1A03     		.2byte	0x31a
 917 02ec 00000000 		.4byte	.LFB9
 918 02f0 58000000 		.4byte	.LFE9-.LFB9
 919 02f4 01       		.uleb128 0x1
 920 02f5 9C       		.byte	0x9c
 921 02f6 2B030000 		.4byte	0x32b
 922 02fa 0C       		.uleb128 0xc
 923 02fb A2000000 		.4byte	.LASF37
 924 02ff 01       		.byte	0x1
 925 0300 1A03     		.2byte	0x31a
 926 0302 83000000 		.4byte	0x83
 927 0306 79010000 		.4byte	.LLST10
 928 030a 0D       		.uleb128 0xd
 929 030b 5F030000 		.4byte	.LASF38
 930 030f 01       		.byte	0x1
 931 0310 1C03     		.2byte	0x31c
 932 0312 83000000 		.4byte	0x83
 933 0316 B2010000 		.4byte	.LLST11
 934 031a 0D       		.uleb128 0xd
 935 031b C8000000 		.4byte	.LASF39
 936 031f 01       		.byte	0x1
 937 0320 1D03     		.2byte	0x31d
 938 0322 83000000 		.4byte	0x83
ARM GAS  C:\Users\GIANLU~1\AppData\Local\Temp\ccsLdGBK.s 			page 32


 939 0326 C5010000 		.4byte	.LLST12
 940 032a 00       		.byte	0
 941 032b 12       		.uleb128 0x12
 942 032c 37000000 		.4byte	.LASF49
 943 0330 05       		.byte	0x5
 944 0331 5B       		.byte	0x5b
 945 0332 77000000 		.4byte	0x77
 946 0336 13       		.uleb128 0x13
 947 0337 DB020000 		.4byte	.LASF40
 948 033b DB020000 		.4byte	.LASF40
 949 033f 03       		.byte	0x3
 950 0340 D8       		.byte	0xd8
 951 0341 13       		.uleb128 0x13
 952 0342 07020000 		.4byte	.LASF41
 953 0346 07020000 		.4byte	.LASF41
 954 034a 03       		.byte	0x3
 955 034b D3       		.byte	0xd3
 956 034c 13       		.uleb128 0x13
 957 034d 61000000 		.4byte	.LASF42
 958 0351 61000000 		.4byte	.LASF42
 959 0355 03       		.byte	0x3
 960 0356 D0       		.byte	0xd0
 961 0357 14       		.uleb128 0x14
 962 0358 43030000 		.4byte	.LASF43
 963 035c 43030000 		.4byte	.LASF43
 964 0360 04       		.byte	0x4
 965 0361 3E03     		.2byte	0x33e
 966 0363 14       		.uleb128 0x14
 967 0364 F2020000 		.4byte	.LASF44
 968 0368 F2020000 		.4byte	.LASF44
 969 036c 04       		.byte	0x4
 970 036d 3D03     		.2byte	0x33d
 971 036f 14       		.uleb128 0x14
 972 0370 C3020000 		.4byte	.LASF45
 973 0374 C3020000 		.4byte	.LASF45
 974 0378 04       		.byte	0x4
 975 0379 4403     		.2byte	0x344
 976 037b 00       		.byte	0
 977              		.section	.debug_abbrev,"",%progbits
 978              	.Ldebug_abbrev0:
 979 0000 01       		.uleb128 0x1
 980 0001 11       		.uleb128 0x11
 981 0002 01       		.byte	0x1
 982 0003 25       		.uleb128 0x25
 983 0004 0E       		.uleb128 0xe
 984 0005 13       		.uleb128 0x13
 985 0006 0B       		.uleb128 0xb
 986 0007 03       		.uleb128 0x3
 987 0008 0E       		.uleb128 0xe
 988 0009 1B       		.uleb128 0x1b
 989 000a 0E       		.uleb128 0xe
 990 000b 55       		.uleb128 0x55
 991 000c 17       		.uleb128 0x17
 992 000d 11       		.uleb128 0x11
 993 000e 01       		.uleb128 0x1
 994 000f 10       		.uleb128 0x10
 995 0010 17       		.uleb128 0x17
ARM GAS  C:\Users\GIANLU~1\AppData\Local\Temp\ccsLdGBK.s 			page 33


 996 0011 00       		.byte	0
 997 0012 00       		.byte	0
 998 0013 02       		.uleb128 0x2
 999 0014 24       		.uleb128 0x24
 1000 0015 00       		.byte	0
 1001 0016 0B       		.uleb128 0xb
 1002 0017 0B       		.uleb128 0xb
 1003 0018 3E       		.uleb128 0x3e
 1004 0019 0B       		.uleb128 0xb
 1005 001a 03       		.uleb128 0x3
 1006 001b 0E       		.uleb128 0xe
 1007 001c 00       		.byte	0
 1008 001d 00       		.byte	0
 1009 001e 03       		.uleb128 0x3
 1010 001f 24       		.uleb128 0x24
 1011 0020 00       		.byte	0
 1012 0021 0B       		.uleb128 0xb
 1013 0022 0B       		.uleb128 0xb
 1014 0023 3E       		.uleb128 0x3e
 1015 0024 0B       		.uleb128 0xb
 1016 0025 03       		.uleb128 0x3
 1017 0026 08       		.uleb128 0x8
 1018 0027 00       		.byte	0
 1019 0028 00       		.byte	0
 1020 0029 04       		.uleb128 0x4
 1021 002a 16       		.uleb128 0x16
 1022 002b 00       		.byte	0
 1023 002c 03       		.uleb128 0x3
 1024 002d 0E       		.uleb128 0xe
 1025 002e 3A       		.uleb128 0x3a
 1026 002f 0B       		.uleb128 0xb
 1027 0030 3B       		.uleb128 0x3b
 1028 0031 05       		.uleb128 0x5
 1029 0032 49       		.uleb128 0x49
 1030 0033 13       		.uleb128 0x13
 1031 0034 00       		.byte	0
 1032 0035 00       		.byte	0
 1033 0036 05       		.uleb128 0x5
 1034 0037 35       		.uleb128 0x35
 1035 0038 00       		.byte	0
 1036 0039 49       		.uleb128 0x49
 1037 003a 13       		.uleb128 0x13
 1038 003b 00       		.byte	0
 1039 003c 00       		.byte	0
 1040 003d 06       		.uleb128 0x6
 1041 003e 2E       		.uleb128 0x2e
 1042 003f 01       		.byte	0x1
 1043 0040 3F       		.uleb128 0x3f
 1044 0041 19       		.uleb128 0x19
 1045 0042 03       		.uleb128 0x3
 1046 0043 0E       		.uleb128 0xe
 1047 0044 3A       		.uleb128 0x3a
 1048 0045 0B       		.uleb128 0xb
 1049 0046 3B       		.uleb128 0x3b
 1050 0047 0B       		.uleb128 0xb
 1051 0048 27       		.uleb128 0x27
 1052 0049 19       		.uleb128 0x19
ARM GAS  C:\Users\GIANLU~1\AppData\Local\Temp\ccsLdGBK.s 			page 34


 1053 004a 11       		.uleb128 0x11
 1054 004b 01       		.uleb128 0x1
 1055 004c 12       		.uleb128 0x12
 1056 004d 06       		.uleb128 0x6
 1057 004e 40       		.uleb128 0x40
 1058 004f 18       		.uleb128 0x18
 1059 0050 9742     		.uleb128 0x2117
 1060 0052 19       		.uleb128 0x19
 1061 0053 01       		.uleb128 0x1
 1062 0054 13       		.uleb128 0x13
 1063 0055 00       		.byte	0
 1064 0056 00       		.byte	0
 1065 0057 07       		.uleb128 0x7
 1066 0058 898201   		.uleb128 0x4109
 1067 005b 01       		.byte	0x1
 1068 005c 11       		.uleb128 0x11
 1069 005d 01       		.uleb128 0x1
 1070 005e 31       		.uleb128 0x31
 1071 005f 13       		.uleb128 0x13
 1072 0060 01       		.uleb128 0x1
 1073 0061 13       		.uleb128 0x13
 1074 0062 00       		.byte	0
 1075 0063 00       		.byte	0
 1076 0064 08       		.uleb128 0x8
 1077 0065 8A8201   		.uleb128 0x410a
 1078 0068 00       		.byte	0
 1079 0069 02       		.uleb128 0x2
 1080 006a 18       		.uleb128 0x18
 1081 006b 9142     		.uleb128 0x2111
 1082 006d 18       		.uleb128 0x18
 1083 006e 00       		.byte	0
 1084 006f 00       		.byte	0
 1085 0070 09       		.uleb128 0x9
 1086 0071 898201   		.uleb128 0x4109
 1087 0074 01       		.byte	0x1
 1088 0075 11       		.uleb128 0x11
 1089 0076 01       		.uleb128 0x1
 1090 0077 31       		.uleb128 0x31
 1091 0078 13       		.uleb128 0x13
 1092 0079 00       		.byte	0
 1093 007a 00       		.byte	0
 1094 007b 0A       		.uleb128 0xa
 1095 007c 2E       		.uleb128 0x2e
 1096 007d 00       		.byte	0
 1097 007e 3F       		.uleb128 0x3f
 1098 007f 19       		.uleb128 0x19
 1099 0080 03       		.uleb128 0x3
 1100 0081 0E       		.uleb128 0xe
 1101 0082 3A       		.uleb128 0x3a
 1102 0083 0B       		.uleb128 0xb
 1103 0084 3B       		.uleb128 0x3b
 1104 0085 05       		.uleb128 0x5
 1105 0086 27       		.uleb128 0x27
 1106 0087 19       		.uleb128 0x19
 1107 0088 11       		.uleb128 0x11
 1108 0089 01       		.uleb128 0x1
 1109 008a 12       		.uleb128 0x12
ARM GAS  C:\Users\GIANLU~1\AppData\Local\Temp\ccsLdGBK.s 			page 35


 1110 008b 06       		.uleb128 0x6
 1111 008c 40       		.uleb128 0x40
 1112 008d 18       		.uleb128 0x18
 1113 008e 9742     		.uleb128 0x2117
 1114 0090 19       		.uleb128 0x19
 1115 0091 00       		.byte	0
 1116 0092 00       		.byte	0
 1117 0093 0B       		.uleb128 0xb
 1118 0094 2E       		.uleb128 0x2e
 1119 0095 01       		.byte	0x1
 1120 0096 3F       		.uleb128 0x3f
 1121 0097 19       		.uleb128 0x19
 1122 0098 03       		.uleb128 0x3
 1123 0099 0E       		.uleb128 0xe
 1124 009a 3A       		.uleb128 0x3a
 1125 009b 0B       		.uleb128 0xb
 1126 009c 3B       		.uleb128 0x3b
 1127 009d 05       		.uleb128 0x5
 1128 009e 27       		.uleb128 0x27
 1129 009f 19       		.uleb128 0x19
 1130 00a0 11       		.uleb128 0x11
 1131 00a1 01       		.uleb128 0x1
 1132 00a2 12       		.uleb128 0x12
 1133 00a3 06       		.uleb128 0x6
 1134 00a4 40       		.uleb128 0x40
 1135 00a5 18       		.uleb128 0x18
 1136 00a6 9742     		.uleb128 0x2117
 1137 00a8 19       		.uleb128 0x19
 1138 00a9 01       		.uleb128 0x1
 1139 00aa 13       		.uleb128 0x13
 1140 00ab 00       		.byte	0
 1141 00ac 00       		.byte	0
 1142 00ad 0C       		.uleb128 0xc
 1143 00ae 05       		.uleb128 0x5
 1144 00af 00       		.byte	0
 1145 00b0 03       		.uleb128 0x3
 1146 00b1 0E       		.uleb128 0xe
 1147 00b2 3A       		.uleb128 0x3a
 1148 00b3 0B       		.uleb128 0xb
 1149 00b4 3B       		.uleb128 0x3b
 1150 00b5 05       		.uleb128 0x5
 1151 00b6 49       		.uleb128 0x49
 1152 00b7 13       		.uleb128 0x13
 1153 00b8 02       		.uleb128 0x2
 1154 00b9 17       		.uleb128 0x17
 1155 00ba 00       		.byte	0
 1156 00bb 00       		.byte	0
 1157 00bc 0D       		.uleb128 0xd
 1158 00bd 34       		.uleb128 0x34
 1159 00be 00       		.byte	0
 1160 00bf 03       		.uleb128 0x3
 1161 00c0 0E       		.uleb128 0xe
 1162 00c1 3A       		.uleb128 0x3a
 1163 00c2 0B       		.uleb128 0xb
 1164 00c3 3B       		.uleb128 0x3b
 1165 00c4 05       		.uleb128 0x5
 1166 00c5 49       		.uleb128 0x49
ARM GAS  C:\Users\GIANLU~1\AppData\Local\Temp\ccsLdGBK.s 			page 36


 1167 00c6 13       		.uleb128 0x13
 1168 00c7 02       		.uleb128 0x2
 1169 00c8 17       		.uleb128 0x17
 1170 00c9 00       		.byte	0
 1171 00ca 00       		.byte	0
 1172 00cb 0E       		.uleb128 0xe
 1173 00cc 2E       		.uleb128 0x2e
 1174 00cd 01       		.byte	0x1
 1175 00ce 3F       		.uleb128 0x3f
 1176 00cf 19       		.uleb128 0x19
 1177 00d0 03       		.uleb128 0x3
 1178 00d1 0E       		.uleb128 0xe
 1179 00d2 3A       		.uleb128 0x3a
 1180 00d3 0B       		.uleb128 0xb
 1181 00d4 3B       		.uleb128 0x3b
 1182 00d5 05       		.uleb128 0x5
 1183 00d6 27       		.uleb128 0x27
 1184 00d7 19       		.uleb128 0x19
 1185 00d8 49       		.uleb128 0x49
 1186 00d9 13       		.uleb128 0x13
 1187 00da 11       		.uleb128 0x11
 1188 00db 01       		.uleb128 0x1
 1189 00dc 12       		.uleb128 0x12
 1190 00dd 06       		.uleb128 0x6
 1191 00de 40       		.uleb128 0x40
 1192 00df 18       		.uleb128 0x18
 1193 00e0 9742     		.uleb128 0x2117
 1194 00e2 19       		.uleb128 0x19
 1195 00e3 01       		.uleb128 0x1
 1196 00e4 13       		.uleb128 0x13
 1197 00e5 00       		.byte	0
 1198 00e6 00       		.byte	0
 1199 00e7 0F       		.uleb128 0xf
 1200 00e8 898201   		.uleb128 0x4109
 1201 00eb 00       		.byte	0
 1202 00ec 11       		.uleb128 0x11
 1203 00ed 01       		.uleb128 0x1
 1204 00ee 31       		.uleb128 0x31
 1205 00ef 13       		.uleb128 0x13
 1206 00f0 00       		.byte	0
 1207 00f1 00       		.byte	0
 1208 00f2 10       		.uleb128 0x10
 1209 00f3 0F       		.uleb128 0xf
 1210 00f4 00       		.byte	0
 1211 00f5 0B       		.uleb128 0xb
 1212 00f6 0B       		.uleb128 0xb
 1213 00f7 49       		.uleb128 0x49
 1214 00f8 13       		.uleb128 0x13
 1215 00f9 00       		.byte	0
 1216 00fa 00       		.byte	0
 1217 00fb 11       		.uleb128 0x11
 1218 00fc 26       		.uleb128 0x26
 1219 00fd 00       		.byte	0
 1220 00fe 49       		.uleb128 0x49
 1221 00ff 13       		.uleb128 0x13
 1222 0100 00       		.byte	0
 1223 0101 00       		.byte	0
ARM GAS  C:\Users\GIANLU~1\AppData\Local\Temp\ccsLdGBK.s 			page 37


 1224 0102 12       		.uleb128 0x12
 1225 0103 34       		.uleb128 0x34
 1226 0104 00       		.byte	0
 1227 0105 03       		.uleb128 0x3
 1228 0106 0E       		.uleb128 0xe
 1229 0107 3A       		.uleb128 0x3a
 1230 0108 0B       		.uleb128 0xb
 1231 0109 3B       		.uleb128 0x3b
 1232 010a 0B       		.uleb128 0xb
 1233 010b 49       		.uleb128 0x49
 1234 010c 13       		.uleb128 0x13
 1235 010d 3F       		.uleb128 0x3f
 1236 010e 19       		.uleb128 0x19
 1237 010f 3C       		.uleb128 0x3c
 1238 0110 19       		.uleb128 0x19
 1239 0111 00       		.byte	0
 1240 0112 00       		.byte	0
 1241 0113 13       		.uleb128 0x13
 1242 0114 2E       		.uleb128 0x2e
 1243 0115 00       		.byte	0
 1244 0116 3F       		.uleb128 0x3f
 1245 0117 19       		.uleb128 0x19
 1246 0118 3C       		.uleb128 0x3c
 1247 0119 19       		.uleb128 0x19
 1248 011a 6E       		.uleb128 0x6e
 1249 011b 0E       		.uleb128 0xe
 1250 011c 03       		.uleb128 0x3
 1251 011d 0E       		.uleb128 0xe
 1252 011e 3A       		.uleb128 0x3a
 1253 011f 0B       		.uleb128 0xb
 1254 0120 3B       		.uleb128 0x3b
 1255 0121 0B       		.uleb128 0xb
 1256 0122 00       		.byte	0
 1257 0123 00       		.byte	0
 1258 0124 14       		.uleb128 0x14
 1259 0125 2E       		.uleb128 0x2e
 1260 0126 00       		.byte	0
 1261 0127 3F       		.uleb128 0x3f
 1262 0128 19       		.uleb128 0x19
 1263 0129 3C       		.uleb128 0x3c
 1264 012a 19       		.uleb128 0x19
 1265 012b 6E       		.uleb128 0x6e
 1266 012c 0E       		.uleb128 0xe
 1267 012d 03       		.uleb128 0x3
 1268 012e 0E       		.uleb128 0xe
 1269 012f 3A       		.uleb128 0x3a
 1270 0130 0B       		.uleb128 0xb
 1271 0131 3B       		.uleb128 0x3b
 1272 0132 05       		.uleb128 0x5
 1273 0133 00       		.byte	0
 1274 0134 00       		.byte	0
 1275 0135 00       		.byte	0
 1276              		.section	.debug_loc,"",%progbits
 1277              	.Ldebug_loc0:
 1278              	.LLST0:
 1279 0000 00000000 		.4byte	.LVL3
 1280 0004 0A000000 		.4byte	.LVL6
ARM GAS  C:\Users\GIANLU~1\AppData\Local\Temp\ccsLdGBK.s 			page 38


 1281 0008 0100     		.2byte	0x1
 1282 000a 50       		.byte	0x50
 1283 000b 0A000000 		.4byte	.LVL6
 1284 000f 14000000 		.4byte	.LFE3
 1285 0013 0400     		.2byte	0x4
 1286 0015 F3       		.byte	0xf3
 1287 0016 01       		.uleb128 0x1
 1288 0017 50       		.byte	0x50
 1289 0018 9F       		.byte	0x9f
 1290 0019 00000000 		.4byte	0
 1291 001d 00000000 		.4byte	0
 1292              	.LLST1:
 1293 0021 04000000 		.4byte	.LVL4
 1294 0025 0C000000 		.4byte	.LVL7
 1295 0029 0100     		.2byte	0x1
 1296 002b 53       		.byte	0x53
 1297 002c 0C000000 		.4byte	.LVL7
 1298 0030 14000000 		.4byte	.LFE3
 1299 0034 0100     		.2byte	0x1
 1300 0036 50       		.byte	0x50
 1301 0037 00000000 		.4byte	0
 1302 003b 00000000 		.4byte	0
 1303              	.LLST2:
 1304 003f 00000000 		.4byte	.LVL8
 1305 0043 0A000000 		.4byte	.LVL11
 1306 0047 0100     		.2byte	0x1
 1307 0049 50       		.byte	0x50
 1308 004a 0A000000 		.4byte	.LVL11
 1309 004e 18000000 		.4byte	.LFE4
 1310 0052 0400     		.2byte	0x4
 1311 0054 F3       		.byte	0xf3
 1312 0055 01       		.uleb128 0x1
 1313 0056 50       		.byte	0x50
 1314 0057 9F       		.byte	0x9f
 1315 0058 00000000 		.4byte	0
 1316 005c 00000000 		.4byte	0
 1317              	.LLST3:
 1318 0060 04000000 		.4byte	.LVL9
 1319 0064 08000000 		.4byte	.LVL10
 1320 0068 0100     		.2byte	0x1
 1321 006a 51       		.byte	0x51
 1322 006b 08000000 		.4byte	.LVL10
 1323 006f 0C000000 		.4byte	.LVL12
 1324 0073 0100     		.2byte	0x1
 1325 0075 53       		.byte	0x53
 1326 0076 0C000000 		.4byte	.LVL12
 1327 007a 18000000 		.4byte	.LFE4
 1328 007e 0100     		.2byte	0x1
 1329 0080 50       		.byte	0x50
 1330 0081 00000000 		.4byte	0
 1331 0085 00000000 		.4byte	0
 1332              	.LLST4:
 1333 0089 02000000 		.4byte	.LVL13
 1334 008d 0E000000 		.4byte	.LVL15
 1335 0091 0200     		.2byte	0x2
 1336 0093 30       		.byte	0x30
 1337 0094 9F       		.byte	0x9f
ARM GAS  C:\Users\GIANLU~1\AppData\Local\Temp\ccsLdGBK.s 			page 39


 1338 0095 0E000000 		.4byte	.LVL15
 1339 0099 10000000 		.4byte	.LVL16
 1340 009d 0100     		.2byte	0x1
 1341 009f 50       		.byte	0x50
 1342 00a0 10000000 		.4byte	.LVL16
 1343 00a4 12000000 		.4byte	.LVL17
 1344 00a8 0200     		.2byte	0x2
 1345 00aa 30       		.byte	0x30
 1346 00ab 9F       		.byte	0x9f
 1347 00ac 12000000 		.4byte	.LVL17
 1348 00b0 1E000000 		.4byte	.LVL18
 1349 00b4 0100     		.2byte	0x1
 1350 00b6 50       		.byte	0x50
 1351 00b7 1E000000 		.4byte	.LVL18
 1352 00bb 26000000 		.4byte	.LVL19
 1353 00bf 0200     		.2byte	0x2
 1354 00c1 30       		.byte	0x30
 1355 00c2 9F       		.byte	0x9f
 1356 00c3 26000000 		.4byte	.LVL19
 1357 00c7 2C000000 		.4byte	.LFE5
 1358 00cb 0100     		.2byte	0x1
 1359 00cd 50       		.byte	0x50
 1360 00ce 00000000 		.4byte	0
 1361 00d2 00000000 		.4byte	0
 1362              	.LLST5:
 1363 00d6 0E000000 		.4byte	.LVL21
 1364 00da 10000000 		.4byte	.LVL22
 1365 00de 0100     		.2byte	0x1
 1366 00e0 50       		.byte	0x50
 1367 00e1 14000000 		.4byte	.LVL23
 1368 00e5 34000000 		.4byte	.LFE6
 1369 00e9 0100     		.2byte	0x1
 1370 00eb 50       		.byte	0x50
 1371 00ec 00000000 		.4byte	0
 1372 00f0 00000000 		.4byte	0
 1373              	.LLST6:
 1374 00f4 18000000 		.4byte	.LVL24
 1375 00f8 20000000 		.4byte	.LVL25
 1376 00fc 0700     		.2byte	0x7
 1377 00fe 73       		.byte	0x73
 1378 00ff 00       		.sleb128 0
 1379 0100 0A       		.byte	0xa
 1380 0101 6003     		.2byte	0x360
 1381 0103 1A       		.byte	0x1a
 1382 0104 9F       		.byte	0x9f
 1383 0105 00000000 		.4byte	0
 1384 0109 00000000 		.4byte	0
 1385              	.LLST7:
 1386 010d 00000000 		.4byte	.LVL27
 1387 0111 08000000 		.4byte	.LVL29
 1388 0115 0100     		.2byte	0x1
 1389 0117 50       		.byte	0x50
 1390 0118 08000000 		.4byte	.LVL29
 1391 011c 14000000 		.4byte	.LVL33
 1392 0120 0100     		.2byte	0x1
 1393 0122 55       		.byte	0x55
 1394 0123 14000000 		.4byte	.LVL33
ARM GAS  C:\Users\GIANLU~1\AppData\Local\Temp\ccsLdGBK.s 			page 40


 1395 0127 16000000 		.4byte	.LFE7
 1396 012b 0400     		.2byte	0x4
 1397 012d F3       		.byte	0xf3
 1398 012e 01       		.uleb128 0x1
 1399 012f 50       		.byte	0x50
 1400 0130 9F       		.byte	0x9f
 1401 0131 00000000 		.4byte	0
 1402 0135 00000000 		.4byte	0
 1403              	.LLST8:
 1404 0139 04000000 		.4byte	.LVL28
 1405 013d 08000000 		.4byte	.LVL29
 1406 0141 0200     		.2byte	0x2
 1407 0143 30       		.byte	0x30
 1408 0144 9F       		.byte	0x9f
 1409 0145 08000000 		.4byte	.LVL29
 1410 0149 14000000 		.4byte	.LVL32
 1411 014d 0100     		.2byte	0x1
 1412 014f 54       		.byte	0x54
 1413 0150 00000000 		.4byte	0
 1414 0154 00000000 		.4byte	0
 1415              	.LLST9:
 1416 0158 00000000 		.4byte	.LVL34
 1417 015c 05000000 		.4byte	.LVL35-1
 1418 0160 0100     		.2byte	0x1
 1419 0162 50       		.byte	0x50
 1420 0163 05000000 		.4byte	.LVL35-1
 1421 0167 14000000 		.4byte	.LFE8
 1422 016b 0400     		.2byte	0x4
 1423 016d F3       		.byte	0xf3
 1424 016e 01       		.uleb128 0x1
 1425 016f 50       		.byte	0x50
 1426 0170 9F       		.byte	0x9f
 1427 0171 00000000 		.4byte	0
 1428 0175 00000000 		.4byte	0
 1429              	.LLST10:
 1430 0179 00000000 		.4byte	.LVL38
 1431 017d 1C000000 		.4byte	.LVL41
 1432 0181 0100     		.2byte	0x1
 1433 0183 50       		.byte	0x50
 1434 0184 1C000000 		.4byte	.LVL41
 1435 0188 20000000 		.4byte	.LVL42
 1436 018c 0100     		.2byte	0x1
 1437 018e 53       		.byte	0x53
 1438 018f 20000000 		.4byte	.LVL42
 1439 0193 28000000 		.4byte	.LVL43
 1440 0197 0300     		.2byte	0x3
 1441 0199 73       		.byte	0x73
 1442 019a 01       		.sleb128 1
 1443 019b 9F       		.byte	0x9f
 1444 019c 28000000 		.4byte	.LVL43
 1445 01a0 58000000 		.4byte	.LFE9
 1446 01a4 0400     		.2byte	0x4
 1447 01a6 F3       		.byte	0xf3
 1448 01a7 01       		.uleb128 0x1
 1449 01a8 50       		.byte	0x50
 1450 01a9 9F       		.byte	0x9f
 1451 01aa 00000000 		.4byte	0
ARM GAS  C:\Users\GIANLU~1\AppData\Local\Temp\ccsLdGBK.s 			page 41


 1452 01ae 00000000 		.4byte	0
 1453              	.LLST11:
 1454 01b2 18000000 		.4byte	.LVL40
 1455 01b6 40000000 		.4byte	.LVL45
 1456 01ba 0100     		.2byte	0x1
 1457 01bc 56       		.byte	0x56
 1458 01bd 00000000 		.4byte	0
 1459 01c1 00000000 		.4byte	0
 1460              	.LLST12:
 1461 01c5 08000000 		.4byte	.LVL39
 1462 01c9 40000000 		.4byte	.LVL44
 1463 01cd 0100     		.2byte	0x1
 1464 01cf 55       		.byte	0x55
 1465 01d0 40000000 		.4byte	.LVL44
 1466 01d4 58000000 		.4byte	.LFE9
 1467 01d8 0200     		.2byte	0x2
 1468 01da 73       		.byte	0x73
 1469 01db 00       		.sleb128 0
 1470 01dc 00000000 		.4byte	0
 1471 01e0 00000000 		.4byte	0
 1472              		.section	.debug_aranges,"",%progbits
 1473 0000 64000000 		.4byte	0x64
 1474 0004 0200     		.2byte	0x2
 1475 0006 00000000 		.4byte	.Ldebug_info0
 1476 000a 04       		.byte	0x4
 1477 000b 00       		.byte	0
 1478 000c 0000     		.2byte	0
 1479 000e 0000     		.2byte	0
 1480 0010 00000000 		.4byte	.LFB0
 1481 0014 C0000000 		.4byte	.LFE0-.LFB0
 1482 0018 00000000 		.4byte	.LFB1
 1483 001c 24000000 		.4byte	.LFE1-.LFB1
 1484 0020 00000000 		.4byte	.LFB2
 1485 0024 28000000 		.4byte	.LFE2-.LFB2
 1486 0028 00000000 		.4byte	.LFB3
 1487 002c 14000000 		.4byte	.LFE3-.LFB3
 1488 0030 00000000 		.4byte	.LFB4
 1489 0034 18000000 		.4byte	.LFE4-.LFB4
 1490 0038 00000000 		.4byte	.LFB5
 1491 003c 2C000000 		.4byte	.LFE5-.LFB5
 1492 0040 00000000 		.4byte	.LFB6
 1493 0044 34000000 		.4byte	.LFE6-.LFB6
 1494 0048 00000000 		.4byte	.LFB7
 1495 004c 16000000 		.4byte	.LFE7-.LFB7
 1496 0050 00000000 		.4byte	.LFB8
 1497 0054 14000000 		.4byte	.LFE8-.LFB8
 1498 0058 00000000 		.4byte	.LFB9
 1499 005c 58000000 		.4byte	.LFE9-.LFB9
 1500 0060 00000000 		.4byte	0
 1501 0064 00000000 		.4byte	0
 1502              		.section	.debug_ranges,"",%progbits
 1503              	.Ldebug_ranges0:
 1504 0000 00000000 		.4byte	.LFB0
 1505 0004 C0000000 		.4byte	.LFE0
 1506 0008 00000000 		.4byte	.LFB1
 1507 000c 24000000 		.4byte	.LFE1
 1508 0010 00000000 		.4byte	.LFB2
ARM GAS  C:\Users\GIANLU~1\AppData\Local\Temp\ccsLdGBK.s 			page 42


 1509 0014 28000000 		.4byte	.LFE2
 1510 0018 00000000 		.4byte	.LFB3
 1511 001c 14000000 		.4byte	.LFE3
 1512 0020 00000000 		.4byte	.LFB4
 1513 0024 18000000 		.4byte	.LFE4
 1514 0028 00000000 		.4byte	.LFB5
 1515 002c 2C000000 		.4byte	.LFE5
 1516 0030 00000000 		.4byte	.LFB6
 1517 0034 34000000 		.4byte	.LFE6
 1518 0038 00000000 		.4byte	.LFB7
 1519 003c 16000000 		.4byte	.LFE7
 1520 0040 00000000 		.4byte	.LFB8
 1521 0044 14000000 		.4byte	.LFE8
 1522 0048 00000000 		.4byte	.LFB9
 1523 004c 58000000 		.4byte	.LFE9
 1524 0050 00000000 		.4byte	0
 1525 0054 00000000 		.4byte	0
 1526              		.section	.debug_line,"",%progbits
 1527              	.Ldebug_line0:
 1528 0000 77010000 		.section	.debug_str,"MS",%progbits,1
 1528      02007200 
 1528      00000201 
 1528      FB0E0D00 
 1528      01010101 
 1529              	.LASF6:
 1530 0000 6C6F6E67 		.ascii	"long long int\000"
 1530      206C6F6E 
 1530      6720696E 
 1530      7400
 1531              	.LASF16:
 1532 000e 72656733 		.ascii	"reg32\000"
 1532      3200
 1533              	.LASF47:
 1534 0014 47656E65 		.ascii	"Generated_Source\\PSoC4\\UART_UART.c\000"
 1534      72617465 
 1534      645F536F 
 1534      75726365 
 1534      5C50536F 
 1535              	.LASF49:
 1536 0037 55415254 		.ascii	"UART_IntrTxMask\000"
 1536      5F496E74 
 1536      7254784D 
 1536      61736B00 
 1537              	.LASF23:
 1538 0047 55415254 		.ascii	"UART_UartSetRxAddressMask\000"
 1538      5F556172 
 1538      74536574 
 1538      52784164 
 1538      64726573 
 1539              	.LASF42:
 1540 0061 4379496E 		.ascii	"CyIntSetVector\000"
 1540      74536574 
 1540      56656374 
 1540      6F7200
 1541              	.LASF3:
 1542 0070 73686F72 		.ascii	"short unsigned int\000"
 1542      7420756E 
ARM GAS  C:\Users\GIANLU~1\AppData\Local\Temp\ccsLdGBK.s 			page 43


 1542      7369676E 
 1542      65642069 
 1542      6E7400
 1543              	.LASF15:
 1544 0083 63686172 		.ascii	"char\000"
 1544      00
 1545              	.LASF32:
 1546 0088 73747269 		.ascii	"string\000"
 1546      6E6700
 1547              	.LASF31:
 1548 008f 55415254 		.ascii	"UART_UartPutString\000"
 1548      5F556172 
 1548      74507574 
 1548      53747269 
 1548      6E6700
 1549              	.LASF37:
 1550 00a2 62726561 		.ascii	"breakWidth\000"
 1550      6B576964 
 1550      746800
 1551              	.LASF36:
 1552 00ad 55415254 		.ascii	"UART_UartSendBreakBlocking\000"
 1552      5F556172 
 1552      7453656E 
 1552      64427265 
 1552      616B426C 
 1553              	.LASF39:
 1554 00c8 7478496E 		.ascii	"txIntrReg\000"
 1554      74725265 
 1554      6700
 1555              	.LASF1:
 1556 00d2 756E7369 		.ascii	"unsigned char\000"
 1556      676E6564 
 1556      20636861 
 1556      7200
 1557              	.LASF14:
 1558 00e0 63686172 		.ascii	"char8\000"
 1558      3800
 1559              	.LASF19:
 1560 00e6 55415254 		.ascii	"UART_UartPostEnable\000"
 1560      5F556172 
 1560      74506F73 
 1560      74456E61 
 1560      626C6500 
 1561              	.LASF5:
 1562 00fa 6C6F6E67 		.ascii	"long unsigned int\000"
 1562      20756E73 
 1562      69676E65 
 1562      6420696E 
 1562      7400
 1563              	.LASF20:
 1564 010c 55415254 		.ascii	"UART_UartStop\000"
 1564      5F556172 
 1564      7453746F 
 1564      7000
 1565              	.LASF9:
 1566 011a 75696E74 		.ascii	"uint8\000"
 1566      3800
ARM GAS  C:\Users\GIANLU~1\AppData\Local\Temp\ccsLdGBK.s 			page 44


 1567              	.LASF34:
 1568 0120 55415254 		.ascii	"UART_UartPutCRLF\000"
 1568      5F556172 
 1568      74507574 
 1568      43524C46 
 1568      00
 1569              	.LASF29:
 1570 0131 55415254 		.ascii	"UART_UartGetByte\000"
 1570      5F556172 
 1570      74476574 
 1570      42797465 
 1570      00
 1571              	.LASF27:
 1572 0142 72784461 		.ascii	"rxData\000"
 1572      746100
 1573              	.LASF25:
 1574 0149 61646472 		.ascii	"addressMask\000"
 1574      6573734D 
 1574      61736B00 
 1575              	.LASF48:
 1576 0155 433A5C55 		.ascii	"C:\\Users\\gianluca_2\\Desktop\\Workspace01\\CY8C41"
 1576      73657273 
 1576      5C676961 
 1576      6E6C7563 
 1576      615F325C 
 1577 0183 32345F54 		.ascii	"24_TEST.cydsn\000"
 1577      4553542E 
 1577      63796473 
 1577      6E00
 1578              	.LASF13:
 1579 0191 646F7562 		.ascii	"double\000"
 1579      6C6500
 1580              	.LASF22:
 1581 0198 55415254 		.ascii	"UART_UartSetRxAddress\000"
 1581      5F556172 
 1581      74536574 
 1581      52784164 
 1581      64726573 
 1582              	.LASF10:
 1583 01ae 75696E74 		.ascii	"uint16\000"
 1583      313600
 1584              	.LASF11:
 1585 01b5 75696E74 		.ascii	"uint32\000"
 1585      333200
 1586              	.LASF8:
 1587 01bc 756E7369 		.ascii	"unsigned int\000"
 1587      676E6564 
 1587      20696E74 
 1587      00
 1588              	.LASF21:
 1589 01c9 55415254 		.ascii	"UART_UartInit\000"
 1589      5F556172 
 1589      74496E69 
 1589      7400
 1590              	.LASF28:
 1591 01d7 55415254 		.ascii	"UART_UartGetChar\000"
 1591      5F556172 
ARM GAS  C:\Users\GIANLU~1\AppData\Local\Temp\ccsLdGBK.s 			page 45


 1591      74476574 
 1591      43686172 
 1591      00
 1592              	.LASF24:
 1593 01e8 61646472 		.ascii	"address\000"
 1593      65737300 
 1594              	.LASF7:
 1595 01f0 6C6F6E67 		.ascii	"long long unsigned int\000"
 1595      206C6F6E 
 1595      6720756E 
 1595      7369676E 
 1595      65642069 
 1596              	.LASF41:
 1597 0207 4379496E 		.ascii	"CyIntSetPriority\000"
 1597      74536574 
 1597      5072696F 
 1597      72697479 
 1597      00
 1598              	.LASF33:
 1599 0218 62756649 		.ascii	"bufIndex\000"
 1599      6E646578 
 1599      00
 1600              	.LASF46:
 1601 0221 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1601      43313120 
 1601      352E342E 
 1601      31203230 
 1601      31363036 
 1602 0254 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 1602      20726576 
 1602      6973696F 
 1602      6E203233 
 1602      37373135 
 1603 0287 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1603      66756E63 
 1603      74696F6E 
 1603      2D736563 
 1603      74696F6E 
 1604              	.LASF18:
 1605 02af 73697A65 		.ascii	"sizetype\000"
 1605      74797065 
 1605      00
 1606              	.LASF35:
 1607 02b8 74784461 		.ascii	"txDataByte\000"
 1607      74614279 
 1607      746500
 1608              	.LASF45:
 1609 02c3 55415254 		.ascii	"UART_SpiUartWriteTxData\000"
 1609      5F537069 
 1609      55617274 
 1609      57726974 
 1609      65547844 
 1610              	.LASF40:
 1611 02db 4379496E 		.ascii	"CyIntDisable\000"
 1611      74446973 
 1611      61626C65 
 1611      00
ARM GAS  C:\Users\GIANLU~1\AppData\Local\Temp\ccsLdGBK.s 			page 46


 1612              	.LASF2:
 1613 02e8 73686F72 		.ascii	"short int\000"
 1613      7420696E 
 1613      7400
 1614              	.LASF44:
 1615 02f2 55415254 		.ascii	"UART_SpiUartReadRxData\000"
 1615      5F537069 
 1615      55617274 
 1615      52656164 
 1615      52784461 
 1616              	.LASF4:
 1617 0309 6C6F6E67 		.ascii	"long int\000"
 1617      20696E74 
 1617      00
 1618              	.LASF30:
 1619 0312 746D7053 		.ascii	"tmpStatus\000"
 1619      74617475 
 1619      7300
 1620              	.LASF26:
 1621 031c 6D617463 		.ascii	"matchReg\000"
 1621      68526567 
 1621      00
 1622              	.LASF17:
 1623 0325 6C6F6E67 		.ascii	"long double\000"
 1623      20646F75 
 1623      626C6500 
 1624              	.LASF12:
 1625 0331 666C6F61 		.ascii	"float\000"
 1625      7400
 1626              	.LASF0:
 1627 0337 7369676E 		.ascii	"signed char\000"
 1627      65642063 
 1627      68617200 
 1628              	.LASF43:
 1629 0343 55415254 		.ascii	"UART_SpiUartGetRxBufferSize\000"
 1629      5F537069 
 1629      55617274 
 1629      47657452 
 1629      78427566 
 1630              	.LASF38:
 1631 035f 74784374 		.ascii	"txCtrlReg\000"
 1631      726C5265 
 1631      6700
 1632              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
